{"version":3,"sources":["resize-me/index.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Component","ResizeSensor","$$","cls","debounce","throttle","defaultConfig","refreshRate","refreshMode","ResizeMe","config","refreshFunc","WrappedComponent","props","onResize","element","parentNode","onResizeMe","getComputedStyle","width","height","paddingLeft","paddingRight","paddingTop","paddingBottom","size","parseInt","setState","onResizeStrategy","state","position","undefined","resizeSensor","detach","_a","className","rest","node"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Component } from 'react';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\nimport $$ from 'cmn-utils';\nimport cls from 'classnames';\nconst { debounce, throttle } = $$;\n/**\n * 在一个类上增加这个装饰器，可以监听组件的大小变化，\n * 被包装的类在porps中将注入组件的width和height，并且\n * 在上级函组件中可以使用onResize函数\n * @param {*} config\n */\nconst defaultConfig = {\n    refreshRate: 2,\n    refreshMode: 'throttle',\n};\nconst ResizeMe = (config = defaultConfig) => {\n    const refreshFunc = config.refreshMode === 'throttle' ? throttle : debounce;\n    return (WrappedComponent) => {\n        return class Resize extends Component {\n            constructor(props) {\n                super(props);\n                this.onResize = () => {\n                    const element = this.element.parentNode;\n                    const { onResizeMe } = this.props;\n                    const { width, height, paddingLeft, paddingRight, paddingTop, paddingBottom, } = getComputedStyle(element);\n                    const size = {\n                        width: parseInt(width, 10) - parseInt(paddingLeft, 10) - parseInt(paddingRight, 10),\n                        height: parseInt(height, 10) - parseInt(paddingTop, 10) - parseInt(paddingBottom, 10),\n                    };\n                    this.setState(size);\n                    if (onResizeMe)\n                        onResizeMe(size);\n                };\n                this.onResizeStrategy = refreshFunc(this.onResize, config.refreshRate);\n                this.state = {\n                    width: 0,\n                    height: 0,\n                    position: undefined,\n                };\n            }\n            componentDidMount() {\n                const element = this.element.parentNode;\n                this.resizeSensor = new ResizeSensor(element, this.onResizeStrategy);\n                this.onResizeStrategy();\n            }\n            componentWillUnmount() {\n                const element = this.element.parentNode;\n                this.resizeSensor.detach(element, this.onResizeStrategy);\n            }\n            render() {\n                const _a = this.props, { className = '' } = _a, rest = __rest(_a, [\"className\"]);\n                return (<div ref={node => (this.element = node)} className={cls('seid-resize-me', className)}>\n            <WrappedComponent {...rest} size={Object.assign({}, this.state)}/>\n          </div>);\n            }\n        };\n    };\n};\nexport default ResizeMe;\n"],"file":"index.js"}