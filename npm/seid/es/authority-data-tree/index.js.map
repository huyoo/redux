{"version":3,"sources":["authority-data-tree/index.jsx"],"names":["React","message","Icon","Spin","TreeSelect","debounce","isEqual","isEmpty","get","LocaleReceiver","defaultLocale","request","TreeNode","AuthorityDataTree","props","handleCallBack","res","orgParams","setState","fetching","data","success","statusCode","params","expandedKeys","findExpandedKeys","expandedKeysOrigin","error","locale","getOrgData","orgUrl","orgRequestMethod","promise","method","url","timeout","then","console","handleChange","v","_","extra","undefined","triggerNode","id","triggerChange","valueProps","itemData","changedValue","onChange","arr","forEach","item","children","length","code","push","loopOrgan","map","forbid","frozen","name","onTreeExpand","onSearch","state","handleFocus","propsParams","renderComponent","disabled","treeNode","maxHeight","placeholder","value","nextProps","nextValue","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport message from 'antd/es/message';\nimport Icon from 'antd/es/icon';\nimport Spin from 'antd/es/spin';\nimport TreeSelect from 'antd/es/tree-select';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport LocaleReceiver from '../seid-locale-receiver';\nimport defaultLocale from './locale';\nimport { request } from '../utils';\nconst { TreeNode } = TreeSelect;\nclass AuthorityDataTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleCallBack = (res) => {\n            const { orgParams = {} } = this.props;\n            this.setState({\n                fetching: false,\n            });\n            const { data } = res;\n            if (res.success && res.statusCode === 200) {\n                // 调用成功后再把参数值orgParams复制给state的params，若在之前赋值而此时调用又失败了，则不会再次触发调用\n                this.setState({\n                    params: Object.assign({}, orgParams),\n                    data: [data],\n                    // initTitle: Object.keys(data).length ? '' : '未找到数据',\n                    expandedKeys: this.findExpandedKeys([data]),\n                    expandedKeysOrigin: this.findExpandedKeys([data]),\n                });\n            }\n            else {\n                message.error(res.message === null ? get(this.locale, 'serverError') : res.message);\n            }\n        };\n        // 获取组织机构数据\n        this.getOrgData = () => {\n            this.setState({\n                // data: [],\n                fetching: true,\n            });\n            const { orgUrl, orgRequestMethod, orgParams = {} } = this.props;\n            const promise = request({ method: orgRequestMethod, url: orgUrl, params: orgParams, timeout: 25000 });\n            promise\n                .then((res) => {\n                this.handleCallBack(res);\n            })\n                .catch((error) => {\n                this.setState({\n                    fetching: false,\n                });\n                console.error('error', error);\n            });\n        };\n        this.handleChange = (v, _, extra) => {\n            // 如果两次选择的值一样，则不调用change的回调函数\n            if (v === undefined || extra.triggerNode === undefined) {\n                this.setState({ id: undefined });\n                this.triggerChange(undefined);\n            }\n            else {\n                const valueProps = extra.triggerNode.props;\n                this.setState({ id: valueProps.id });\n                this.triggerChange(Object.assign({}, valueProps.itemData));\n            }\n        };\n        this.triggerChange = (changedValue) => {\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(changedValue);\n            }\n        };\n        this.findExpandedKeys = (data, arr = []) => {\n            data.forEach(item => {\n                if (item.children && item.children.length !== 0) {\n                    if (item.code) {\n                        arr.push(item.code);\n                    }\n                    this.findExpandedKeys(item.children, arr);\n                }\n            });\n            return arr;\n        };\n        this.loopOrgan = (data) => {\n            if (!data)\n                return null;\n            return data.map(item => {\n                // forbid：需不需要显示禁用的数据\n                const { forbid = true } = this.props;\n                if (item.children && item.children.length !== 0) {\n                    return (<TreeNode disabled={forbid ? item.frozen : false} icon={<Icon type=\"folder\"/>} key={item.code || item.id} value={item.id} title={item.code ? `${item.code}-${item.name}` : item.name} itemData={item}>\n            {this.loopOrgan(item.children)}\n          </TreeNode>);\n                }\n                return (<TreeNode disabled={forbid ? item.frozen : false} icon={<Icon type=\"file-text\"/>} id={item.id} value={item.id} title={item.code ? `${item.code}-${item.name}` : item.name} key={item.code} itemData={item}/>);\n            });\n        };\n        this.onTreeExpand = (expandedKeys) => {\n            this.setState({\n                expandedKeys,\n            });\n        };\n        this.onSearch = () => {\n            const { expandedKeysOrigin } = this.state;\n            this.setState({ expandedKeys: expandedKeysOrigin });\n        };\n        this.handleFocus = () => {\n            const { data, params } = this.state;\n            const { orgParams: propsParams = {} } = this.props;\n            if (!isEqual(params, propsParams) || data.length === 0) {\n                this.getOrgData();\n            }\n        };\n        this.renderComponent = (locale) => {\n            const { disabled } = this.props;\n            this.locale = locale;\n            const { id, fetching, data = [], expandedKeys } = this.state;\n            const treeNode = this.loopOrgan(data);\n            return (<Spin spinning={fetching} size=\"small\">\n        <TreeSelect loading={fetching} className=\"seid-authority-data-tree\" treeExpandedKeys={expandedKeys} showSearch onFocus={this.handleFocus} value={id} dropdownStyle={{ maxHeight: 300 }} onChange={this.handleChange} placeholder={locale.placeholder} allowClear treeNodeFilterProp=\"title\" onTreeExpand={this.onTreeExpand} onSearch={this.onSearch} disabled={disabled}>\n          {treeNode}\n        </TreeSelect>\n      </Spin>);\n        };\n        const { value = {} } = props;\n        this.getOrgData = debounce(this.getOrgData, 200);\n        this.state = {\n            id: value.id,\n            data: [{ id: value.id, code: value.code, name: value.name }] || [],\n            params: undefined,\n            fetching: false,\n            // initTitle: '查询中……',\n            expandedKeys: [],\n            expandedKeysOrigin: [],\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        const { value } = this.props;\n        const { value: nextValue = {} } = nextProps;\n        if ('value' in nextProps) {\n            if (isEmpty(nextValue) && !isEqual(nextValue, value)) {\n                this.setState({\n                    id: undefined,\n                    data: [],\n                });\n                return;\n            }\n            this.setState({ id: nextValue.id });\n        }\n    }\n    render() {\n        return (<LocaleReceiver componentName=\"AuthorityDataTree\" defaultLocale={defaultLocale}>\n        {this.renderComponent}\n      </LocaleReceiver>);\n    }\n}\nAuthorityDataTree.defaultProps = {\n    orgRequestMethod: 'get',\n};\nexport default AuthorityDataTree;\n"],"file":"index.js"}