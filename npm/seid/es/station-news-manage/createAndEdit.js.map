{"version":3,"sources":["station-news-manage/createAndEdit.jsx"],"names":["React","PureComponent","lodashGet","Modal","Spin","Form","Input","Select","Row","Col","message","SelectTable","UploadFileList","AuthorityDataTree","BraftEditors","request","FormItem","Item","Option","SPAN","columns","code","name","width","sort","StationNewsListManageEdit","props","handleCancel","onCancel","handleGetDetail","getNewsDetailUrl","params","getNewsDetailUrlRequestMethod","method","setState","loading","promise","url","then","res","data","showGroupId","messageType","showRecipientId","error","console","handleMessageType","value","form","setTimeout","setFieldsValue","recipientId","undefined","handleOk","saveNewsUrl","saveNewsRequestMethod","editNewsUrl","editNewsRequestMethod","sign","handleAddAndEdit","port","onRefresh","userId","state","validateFields","err","messageAttachment","recipient","id","recipientCode","recipientNick","publisherId","publisherCode","JSON","stringify","messageLink","messageId","success","getMessageAttachment","parse","e","info","title","content","onOk","destroyAll","disabled","visible","modalProps","orgUrl","fileTypes","uploadDocumentsAPI","downloadDocumentAPI","EDM_URL","receiverUrl","receiverUrlRequestMethod","fileIdAttr","fileNameAttr","getFieldDecorator","formItemLayout","label","wrapper","labelCol","span","wrapperCol","rules","required","initialValue","messageTitle","publisherNick","fileId","uid","response","valuePropName","messageContent","defaultProps","create"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport lodashGet from 'lodash/get';\nimport Modal from 'antd/es/modal';\nimport Spin from 'antd/es/spin';\nimport Form from 'antd/es/form';\nimport Input from 'antd/es/input';\nimport Select from 'antd/es/select';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport message from 'antd/es/message';\nimport SelectTable from '../select-table';\nimport UploadFileList from '../upload-file-list';\nimport AuthorityDataTree from '../authority-data-tree';\nimport BraftEditors from '../rich-editor';\nimport { request } from '../utils';\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst SPAN = 12;\nconst columns = [\n    {\n        code: 'name',\n        name: '姓名',\n        width: 100,\n        sort: 1,\n    },\n    {\n        code: 'orgName',\n        name: '组织名称',\n        width: 250,\n        sort: 1,\n    },\n    {\n        code: 'email',\n        name: '电子邮箱',\n        width: 200,\n        sort: 1,\n    },\n    {\n        code: 'mobile',\n        name: '联系方式',\n        width: 150,\n        sort: 1,\n    },\n];\nclass StationNewsListManageEdit extends PureComponent {\n    constructor(props) {\n        super(props);\n        // 关闭modal\n        this.handleCancel = () => {\n            const { onCancel } = this.props;\n            if (onCancel)\n                onCancel();\n        };\n        // 获取消息详情\n        this.handleGetDetail = () => {\n            const { getNewsDetailUrl, params, getNewsDetailUrlRequestMethod } = this.props;\n            const method = getNewsDetailUrlRequestMethod || 'get';\n            this.setState({\n                loading: true,\n            });\n            const promise = request({ method, url: getNewsDetailUrl, params });\n            promise\n                .then((res) => {\n                const { data = {} } = res;\n                const showGroupId = data.messageType === '1';\n                const showRecipientId = data.messageType === '2';\n                this.setState({\n                    data,\n                    loading: false,\n                    showGroupId,\n                    showRecipientId,\n                });\n            })\n                .catch((error) => {\n                this.setState({\n                    loading: true,\n                });\n                console.error('error', error);\n            });\n        };\n        this.handleMessageType = (value) => {\n            const { form } = this.props;\n            setTimeout(() => {\n                form.setFieldsValue({\n                    recipientId: undefined,\n                });\n            }, 100);\n            if (value === '1') {\n                this.setState({ showGroupId: true, showRecipientId: false });\n            }\n            else if (value === '2') {\n                this.setState({ showGroupId: false, showRecipientId: true });\n            }\n            else {\n                this.setState({\n                    showGroupId: false,\n                    showRecipientId: false,\n                });\n            }\n        };\n        this.handleOk = () => {\n            const { saveNewsUrl, saveNewsRequestMethod, editNewsUrl, editNewsRequestMethod, onCancel, } = this.props;\n            const { sign } = this.props;\n            if (sign === 'create') {\n                this.handleAddAndEdit(saveNewsUrl, saveNewsRequestMethod);\n            }\n            else if (sign === 'edit') {\n                this.handleAddAndEdit(editNewsUrl, editNewsRequestMethod);\n            }\n            else if (onCancel)\n                onCancel();\n        };\n        this.handleAddAndEdit = (port, method) => {\n            const { form, onRefresh, userId } = this.props;\n            const { data } = this.state;\n            form.validateFields((err, value) => {\n                if (!err) {\n                    const { recipientId = {}, messageAttachment } = value;\n                    this.setState({\n                        loading: true,\n                    });\n                    request({\n                        method,\n                        url: port,\n                        data: Object.assign(Object.assign({}, value), { \n                            // recipientId: '33b15633b6b349b19c3a42dbac54911b',\n                            recipient: [\n                                {\n                                    recipientId: recipientId.id,\n                                    recipientCode: recipientId.code,\n                                    recipientNick: recipientId.name,\n                                },\n                            ], publisherId: userId, publisherCode: data.publisherCode, messageAttachment: messageAttachment && JSON.stringify(messageAttachment), messageLink: data.messageLink, messageId: data.messageId }),\n                    })\n                        .then((res) => {\n                        if (res.success) {\n                            this.setState({\n                                loading: false,\n                            });\n                            message.success(res.message);\n                            onRefresh();\n                        }\n                    })\n                        .catch(error => {\n                        this.setState({\n                            loading: false,\n                        });\n                        console.error('error', error);\n                    });\n                }\n            });\n        };\n        this.getMessageAttachment = (data) => {\n            try {\n                if (data)\n                    return JSON.parse(data);\n            }\n            catch (e) {\n                Modal.info({\n                    title: '提醒',\n                    content: <div>上传的附件格式不符合要求</div>,\n                    onOk: () => {\n                        Modal.destroyAll();\n                    },\n                });\n            }\n        };\n        this.state = {\n            data: props.data || {},\n            loading: false,\n            showGroupId: false,\n            showRecipientId: false,\n            disabled: false,\n        };\n    }\n    componentDidMount() {\n        const { sign } = this.props;\n        if (sign === 'look') {\n            this.setState({ disabled: true });\n        }\n        if (sign === 'look' || sign === 'edit')\n            this.handleGetDetail();\n    }\n    render() {\n        const { visible, modalProps, form, title, orgUrl, fileTypes, uploadDocumentsAPI, downloadDocumentAPI, EDM_URL, receiverUrl, receiverUrlRequestMethod, fileIdAttr, fileNameAttr, } = this.props;\n        const { getFieldDecorator } = form;\n        const { loading, showGroupId, showRecipientId, data = {}, disabled } = this.state;\n        const messageAttachment = this.getMessageAttachment(data.messageAttachment);\n        const formItemLayout = (label = 6, wrapper = 16) => ({\n            labelCol: { span: label },\n            wrapperCol: { span: wrapper },\n        });\n        return (<Modal title={title} visible={visible} onCancel={this.handleCancel} onOk={this.handleOk} centered destroyOnClose {...modalProps}>\n        <Spin spinning={loading}>\n          <Form className=\"station-news-manage-detail\">\n            <Row>\n              <Col span={SPAN}>\n                <FormItem label=\"消息标题\" {...formItemLayout()}>\n                  {getFieldDecorator('messageTitle', {\n            rules: [{ required: true, message: '消息标题为必填项' }],\n            initialValue: data.messageTitle,\n        })(<Input disabled={disabled}/>)}\n                </FormItem>\n              </Col>\n              <Col span={SPAN}>\n                <FormItem label=\"发件人\" {...formItemLayout()}>\n                  {getFieldDecorator('publisherNick', {\n            rules: [{ required: true, message: '发件人为必填项' }],\n            initialValue: data.publisherNick,\n        })(<Input disabled={disabled}/>)}\n                </FormItem>\n              </Col>\n              <Col span={SPAN}>\n                <FormItem label=\"消息类型\" {...formItemLayout()}>\n                  {getFieldDecorator('messageType', {\n            rules: [{ required: true, message: '消息类型为必填项' }],\n            initialValue: data.messageType,\n        })(<Select style={{ width: '100%' }} allowClear onChange={this.handleMessageType} disabled={disabled}>\n                      <Option value=\"0\">系统消息</Option>\n                      <Option value=\"1\">群组消息</Option>\n                      <Option value=\"2\">个人消息</Option>\n                    </Select>)}\n                </FormItem>\n              </Col>\n              <Col span={SPAN}>\n                <FormItem label=\"附件\" {...formItemLayout()}>\n                  {getFieldDecorator('messageAttachment', {\n            initialValue: messageAttachment && [\n                {\n                    fileId: lodashGet(messageAttachment, `[0].${fileIdAttr}`),\n                    uid: lodashGet(messageAttachment, `[0].${fileIdAttr}`),\n                    name: lodashGet(messageAttachment, `[0].${fileNameAttr}`),\n                    response: [lodashGet(messageAttachment, `[0].${fileIdAttr}`)],\n                },\n            ],\n            valuePropName: 'fileList',\n        })(<UploadFileList disable={disabled} fileTypes={fileTypes} uploadDocumentsAPI={uploadDocumentsAPI} downloadDocumentAPI={downloadDocumentAPI} EDM_URL={EDM_URL}/>)}\n                </FormItem>\n              </Col>\n              {showGroupId ? (<Col span={SPAN}>\n                  <FormItem label=\"接收组\" {...formItemLayout()}>\n                    {getFieldDecorator('recipientId', {\n            rules: [{ required: true, message: '接收组为必填项' }],\n            initialValue: data.recipient && data.recipient[0]\n                ? {\n                    id: data.recipient[0].recipientId,\n                    code: data.recipient[0].recipientCode,\n                    name: data.recipient[0].recipientNick,\n                }\n                : undefined,\n        })(<AuthorityDataTree orgUrl={orgUrl} disabled={disabled} orgParams={{}}/>)}\n                  </FormItem>\n                </Col>) : null}\n              {showRecipientId ? (<Col span={SPAN}>\n                  <FormItem label=\"接收人\" {...formItemLayout()}>\n                    {getFieldDecorator('recipientId', {\n            rules: [{ required: true, message: '接收人为必填项' }],\n            initialValue: data.recipient && data.recipient[0]\n                ? {\n                    id: data.recipient[0].recipientId,\n                    code: data.recipient[0].recipientCode,\n                    name: data.recipient[0].recipientNick,\n                }\n                : undefined,\n        })(<SelectTable rowKey=\"id\" dataSourceUrl={receiverUrl} columns={columns} disabled={disabled} requestMethod={receiverUrlRequestMethod}/>)}\n                  </FormItem>\n                </Col>) : null}\n              <Col span={24}>\n                <FormItem label=\"消息内容\" labelCol={{ span: 3 }}>\n                  {getFieldDecorator('messageContent', {\n            rules: [{ required: true, message: '消息内容为必填项' }],\n            initialValue: data.messageContent,\n        })(<BraftEditors readOnly={disabled} controls={[]}/>)}\n                </FormItem>\n              </Col>\n            </Row>\n          </Form>\n        </Spin>\n      </Modal>);\n    }\n}\nStationNewsListManageEdit.defaultProps = {\n    getNewsDetailUrlRequestMethod: 'get',\n    fileTypes: ['jpg', 'png', 'jpeg', 'pdf'],\n    fileIdAttr: 'fileId',\n    fileNameAttr: 'name',\n};\nconst create = Form.create;\n// @ts-ignore\nexport default create()(StationNewsListManageEdit);\n"],"file":"createAndEdit.js"}