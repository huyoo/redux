{"version":3,"sources":["station-news-manage/index.jsx"],"names":["React","PureComponent","isEmpty","Button","Form","Select","Input","Card","message","Divider","DatePicker","Row","Col","CreateAndEdit","ExTable","request","Option","Search","RangePicker","defaultRequestMethodGet","defaultRequestMethodPost","defaultRequestMethodDel","handleMessageStatus","status","handleMessageType","StationNewsManage","props","defaultActionColumns","title","key","dataIndex","width","align","render","_","record","lookDetail","defaultColumns","__","index","text","getQueryParams","searchValues","state","getInitPagination","handleGet","extraParams","getNewsListUrl","getNewsListParams","getNewsListRequestMethod","setState","loading","method","url","params","then","res","data","list","pagination","current","pageNum","pageSize","total","selectedRows","error","console","pageIndex","sign","visible","currentRecord","onSearch","value","id","pDateBegin","length","format","undefined","pDateEnd","handleCancel","onTablePageChange","onSelectRow","handleClearValue","e","target","handleCreate","handleDel","delNewsUrl","delNewsRequestMethod","warn","messageIds","map","row","messageId","toString","success","onRefresh","form","columns","getNewsDetailUrl","getNewsDetailUrlRequestMethod","modalProps","detailContent","saveNewsUrl","saveNewsRequestMethod","editNewsUrl","editNewsRequestMethod","orgUrl","orgRequestMethod","uploadDocumentsAPI","downloadDocumentAPI","EDM_URL","receiverUrl","receiverUrlRequestMethod","userId","initModalData","finalColumns","concat","getFieldDecorator","newsType","propsToDetail","onCancel","marginLeft","span","defaultProps","create"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport Button from 'antd/es/button';\nimport Form from 'antd/es/form/Form';\nimport Select from 'antd/es/select';\nimport Input from 'antd/es/input';\nimport Card from 'antd/es/card';\nimport message from 'antd/es/message';\nimport Divider from 'antd/es/divider';\nimport DatePicker from 'antd/es/date-picker';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport CreateAndEdit from './createAndEdit';\nimport ExTable from '../ext-table';\nimport { request } from '../utils';\nconst { Option } = Select;\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst defaultRequestMethodGet = 'get'; // 默认请求方式\nconst defaultRequestMethodPost = 'post'; // 改变消息状态的默认请求方式\nconst defaultRequestMethodDel = 'delete'; // 改变消息状态的默认请求方式\n// 转义消息状态\nexport const handleMessageStatus = (status) => {\n    switch (status) {\n        case '0':\n            return '未读';\n        case '1':\n            return '已读';\n        case '2':\n            return '删除';\n        default:\n            return '无';\n    }\n};\n// 转义消息类型\nexport const handleMessageType = (status) => {\n    switch (status) {\n        case '0':\n            return '系统消息';\n        case '1':\n            return '群组消息 ';\n        case '2':\n            return '个人消息';\n        default:\n            return '无';\n    }\n};\nclass StationNewsManage extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.defaultActionColumns = [\n            {\n                title: '操作',\n                key: 'action',\n                dataIndex: 'action',\n                width: 100,\n                align: 'center',\n                render: (_, record) => (<span>\n          <a key=\"look\" onClick={() => this.lookDetail(record, 'look')}>\n            查看\n          </a>\n          <Divider type=\"vertical\"/>\n          <a key=\"edit\" onClick={() => this.lookDetail(record, 'edit')}>\n            编辑\n          </a>\n        </span>),\n            },\n        ];\n        this.defaultColumns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                key: 'index',\n                width: 80,\n                align: 'center',\n                render: (_, __, index) => index + 1,\n            },\n            {\n                title: '日期',\n                dataIndex: 'publishDate',\n                key: 'publishDate',\n                width: 200,\n                align: 'center',\n            },\n            {\n                title: '类型',\n                dataIndex: 'messageType',\n                key: 'messageType',\n                width: 130,\n                align: 'center',\n                render: text => handleMessageType(text),\n            },\n            {\n                title: '标题',\n                dataIndex: 'messageTitle',\n                key: 'messageTitle',\n            },\n            {\n                title: '发布人',\n                dataIndex: 'publisherNick',\n                key: 'publisherNick',\n                width: 160,\n                align: 'center',\n            },\n        ];\n        // 获取查询列表的参数(分页信息和查询参数)\n        this.getQueryParams = () => {\n            const { searchValues } = this.state;\n            return Object.assign(Object.assign({}, this.getInitPagination()), searchValues);\n        };\n        // 获取未处理的站内消息\n        this.handleGet = (extraParams = {}) => {\n            const { getNewsListUrl, getNewsListParams, getNewsListRequestMethod } = this.props;\n            if (!getNewsListRequestMethod)\n                return;\n            this.setState({\n                loading: true,\n            });\n            request({\n                method: getNewsListRequestMethod,\n                url: getNewsListUrl,\n                params: Object.assign(Object.assign(Object.assign({}, this.getQueryParams()), getNewsListParams), extraParams),\n            })\n                .then(res => {\n                const { data = {} } = res;\n                this.setState({\n                    loading: false,\n                    data: {\n                        list: data.list || [],\n                        pagination: {\n                            current: data.pageNum,\n                            pageSize: data.pageSize,\n                            total: data.total,\n                        },\n                    },\n                    selectedRows: [],\n                });\n            })\n                .catch(error => {\n                this.setState({\n                    loading: false,\n                });\n                console.error('error', error);\n            });\n        };\n        // 获取当前的页码信息\n        this.getInitPagination = () => {\n            const { data: { pagination = {} }, } = this.state;\n            if (!pagination)\n                return;\n            const { current = 1, pageSize } = pagination;\n            return {\n                pageIndex: current - 1,\n                pageSize,\n            };\n        };\n        this.lookDetail = (record, sign) => {\n            const title = sign === 'look' ? '查看消息' : '编辑消息';\n            this.setState({\n                visible: true,\n                currentRecord: record,\n                title,\n                sign,\n            });\n        };\n        // 查询\n        this.onSearch = (value, id) => {\n            const { searchValues } = this.state;\n            let params = {};\n            if (id === 'pDateBegin') {\n                params = {\n                    pDateBegin: value.length ? value[0].format('YYYY-MM-DD 00:00:00') : undefined,\n                    pDateEnd: value.length ? value[1].format('YYYY-MM-DD 23:59:59') : undefined,\n                };\n            }\n            else {\n                params = {\n                    [id]: value,\n                };\n            }\n            this.setState({\n                searchValues: Object.assign(Object.assign({}, searchValues), params),\n            }, () => {\n                this.handleGet({ pageIndex: 0 });\n            });\n            // 调用接口查询数据\n        };\n        // 关闭模态框\n        this.handleCancel = () => {\n            this.setState({ visible: false });\n        };\n        this.onTablePageChange = ({ current, pageSize }) => {\n            const { data } = this.state;\n            this.setState({\n                data: Object.assign(Object.assign({}, data), { pagination: {\n                        current,\n                        pageSize,\n                    } }),\n            }, () => {\n                this.handleGet();\n            });\n        };\n        // 获取表格的选中项\n        this.onSelectRow = (selectedRows) => {\n            this.setState({\n                selectedRows,\n            });\n        };\n        // 清空标题搜索值\n        this.handleClearValue = (e, id) => {\n            const value = e.target.value;\n            if (isEmpty(value)) {\n                this.onSearch('', id);\n            }\n        };\n        this.handleCreate = () => {\n            this.setState({\n                title: '发布消息',\n                visible: true,\n                sign: 'create',\n            });\n        };\n        // 删除消息\n        this.handleDel = () => {\n            const { delNewsUrl, delNewsRequestMethod } = this.props;\n            const { selectedRows } = this.state;\n            if (!selectedRows.length) {\n                message.warn('请勾选要彻底删除的项');\n                return;\n            }\n            this.setState({\n                loading: true,\n            });\n            request({\n                url: delNewsUrl,\n                method: delNewsRequestMethod,\n                params: { messageIds: selectedRows.map((row) => row.messageId).toString() },\n            })\n                .then((res) => {\n                message.success(res.message);\n                this.onRefresh();\n            })\n                .catch(error => {\n                this.setState({\n                    loading: false,\n                });\n                console.error('error', error);\n            });\n        };\n        this.onRefresh = () => {\n            const { visible } = this.state;\n            if (visible) {\n                this.handleCancel();\n            }\n            this.handleGet({ pageIndex: 0 });\n        };\n        this.state = {\n            data: {\n                list: [],\n                pagination: { pageSize: 15, current: 1, total: 0 },\n            },\n            visible: false,\n            loading: false,\n            searchValues: {},\n            // selectedRowKeys: [],\n            selectedRows: [],\n            currentRecord: undefined,\n            title: '',\n            sign: '',\n        };\n    }\n    componentDidMount() {\n        this.handleGet();\n    }\n    render() {\n        const { form, columns = this.defaultColumns, getNewsDetailUrl, getNewsDetailUrlRequestMethod, modalProps, detailContent, saveNewsUrl, saveNewsRequestMethod, editNewsUrl, editNewsRequestMethod, orgUrl, orgRequestMethod, uploadDocumentsAPI, downloadDocumentAPI, EDM_URL, receiverUrl, receiverUrlRequestMethod, userId, initModalData, } = this.props;\n        const { visible, loading, currentRecord, selectedRows, title, sign } = this.state;\n        const finalColumns = this.defaultActionColumns.concat(columns);\n        const { getFieldDecorator } = form;\n        const { data } = this.state;\n        const newsType = (<Select style={{ width: '100%' }} allowClear onChange={(value) => {\n            this.onSearch(value, 'messageType');\n        }}>\n        <Option value={0}>系统消息</Option>\n        <Option value={1}>群组消息</Option>\n        <Option value={2}>个人消息</Option>\n        <Option value=\"\">全部</Option>\n      </Select>);\n        const propsToDetail = {\n            data: initModalData,\n            getNewsDetailUrl,\n            getNewsDetailUrlRequestMethod,\n            visible,\n            sign,\n            title,\n            onCancel: this.handleCancel,\n            onRefresh: this.onRefresh,\n            params: {\n                messageId: currentRecord ? currentRecord.messageId : undefined,\n            },\n            modalProps,\n            detailContent,\n            saveNewsUrl,\n            saveNewsRequestMethod,\n            editNewsUrl,\n            editNewsRequestMethod,\n            orgUrl,\n            orgRequestMethod,\n            uploadDocumentsAPI,\n            downloadDocumentAPI,\n            EDM_URL,\n            receiverUrl,\n            receiverUrlRequestMethod,\n            userId,\n        };\n        return (<Card>\n        <div className=\"station-news-manage-action-btn\">\n          <div className=\"station-manage-btn-left\">\n            <Button onClick={() => this.handleCreate()} value=\"1\" type=\"primary\" key=\"haveRead\">\n              发布\n            </Button>\n            <Button onClick={() => this.handleDel()} value=\"2\" key=\"del\" style={{ marginLeft: 8 }}>\n              彻底删除\n            </Button>\n          </div>\n          <Form className=\"station-manage-btn-right\">\n            <Row style={{ width: '100%' }} type=\"flex\" justify=\"end\">\n              <Col span={5}>\n                <Form.Item labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} label=\"消息类型\">\n                  {getFieldDecorator('messageType')(newsType)}\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item labelCol={{ span: 5 }} wrapperCol={{ span: 18 }} label=\"发送时间\">\n                  {getFieldDecorator('pDateBegin')(<RangePicker allowClear onChange={value => {\n            this.onSearch(value, 'pDateBegin');\n        }}/>)}\n                </Form.Item>\n              </Col>\n              <Col span={7}>\n                <Form.Item>\n                  {getFieldDecorator('keyword')(<Search placeholder=\"请输入关键字\" className=\"whole-width\" allowClear onSearch={value => this.onSearch(value, 'keyword')} onChange={e => this.handleClearValue(e, 'keyword')}/>)}\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n        <ExTable selectedRows={selectedRows} columns={finalColumns} data={data} rowKey=\"messageId\" loading={loading} onChange={this.onTablePageChange}/>\n        {visible ? <CreateAndEdit {...propsToDetail}/> : null}\n      </Card>);\n    }\n}\nStationNewsManage.defaultProps = {\n    getNewsListRequestMethod: defaultRequestMethodGet,\n    getNewsDetailUrlRequestMethod: defaultRequestMethodGet,\n    saveNewsRequestMethod: defaultRequestMethodPost,\n    editNewsRequestMethod: defaultRequestMethodPost,\n    delNewsRequestMethod: defaultRequestMethodDel,\n    orgRequestMethod: defaultRequestMethodGet,\n    receiverUrlRequestMethod: 'post',\n};\n// @ts-ignore\nexport default Form.create()(StationNewsManage);\n"],"file":"index.js"}