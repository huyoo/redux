{"version":3,"sources":["ext-table/Tool.jsx"],"names":["React","cloneElement","PureComponent","Checkbox","Icon","Popover","Menu","get","SubMenu","Item","Divider","Tool","props","onChange","dataIndex","selectedCols","state","checked","includes","cols","push","length","filter","s","setState","onFinishChange","onChangeCols","visible","openKeys","toString","onTitleClick","key","k","getColumnCheckbox","columns","map","col","title","onClick","param","sortConfigs","onChangeSort","sortDirection","find","sortCol","sort","forEach","inx","splice","children","node","Children","only","e","locale","selectedKeys","console","log","width","v","nextProps","prevState"],"mappings":"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","sourcesContent":["import React, { cloneElement, PureComponent } from 'react';\nimport Checkbox from 'antd/es/checkbox';\nimport Icon from 'antd/es/icon';\nimport Popover from 'antd/es/popover';\nimport Menu from 'antd/es/menu';\nimport get from 'lodash/get';\nconst { SubMenu, Item, Divider } = Menu;\nclass Tool extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.onChange = (dataIndex = '') => {\n            const { selectedCols } = this.state;\n            const checked = selectedCols.includes(dataIndex);\n            let cols = [...selectedCols];\n            if (!checked) {\n                cols.push(dataIndex);\n            }\n            else if (selectedCols.length > 1) {\n                cols = selectedCols.filter(s => s !== dataIndex);\n            }\n            this.setState({ selectedCols: cols });\n        };\n        this.onFinishChange = () => {\n            const { onChangeCols, selectedCols: cols = [] } = this.props;\n            const { selectedCols = [] } = this.state;\n            this.setState({ visible: false, openKeys: [] }, () => {\n                if (onChangeCols && cols.toString() !== selectedCols.toString()) {\n                    onChangeCols(selectedCols);\n                }\n            });\n        };\n        this.onTitleClick = ({ key }) => {\n            const { openKeys } = this.state;\n            if (openKeys.includes(key)) {\n                this.setState({ openKeys: openKeys.filter(k => k !== key) });\n            }\n            else {\n                this.setState({ openKeys: [...openKeys, key] });\n            }\n        };\n        this.getColumnCheckbox = () => {\n            const { columns } = this.props;\n            const { selectedCols = [] } = this.state;\n            return columns.map(col => (<Item unselectable=\"on\" key={col.dataIndex} onClick={() => this.onChange(col.dataIndex)}>\n        <div className=\"check-col\">\n          <Checkbox checked={selectedCols.includes(col.dataIndex || '')}/>\n          <span>{col.title}</span>\n        </div>\n      </Item>));\n        };\n        this.onClick = (param) => {\n            const { key } = param;\n            if (key !== 'asc' && key !== 'desc') {\n                return;\n            }\n            const { sortConfigs = [], dataIndex, onChangeSort } = this.props;\n            const sortDirection = sortConfigs.find((s) => s.sortCol === dataIndex);\n            if (sortDirection) {\n                if (sortDirection.sort === key) {\n                    // 删除排序\n                    sortConfigs.forEach((s, inx) => {\n                        if (s.sortCol === dataIndex) {\n                            sortConfigs.splice(inx, 1);\n                        }\n                    });\n                }\n                else {\n                    sortConfigs.forEach((s, inx) => {\n                        // 修改排序方式\n                        if (s.sortCol === dataIndex) {\n                            sortConfigs.splice(inx, 1, Object.assign(Object.assign({}, s), { sort: key }));\n                        }\n                    });\n                }\n            }\n            else {\n                sortConfigs.push({\n                    sortCol: dataIndex,\n                    sort: key,\n                });\n            }\n            if (onChangeSort) {\n                onChangeSort([...sortConfigs]);\n            }\n        };\n        const { children } = props;\n        this.node = cloneElement(React.Children.only(children), {\n            onClick: (e) => {\n                this.setState({ visible: true });\n                if (children && children.props && children.props.onClick) {\n                    children.props.onClick(e);\n                }\n            },\n        });\n        this.state = { visible: false, openKeys: [], selectedCols: [] };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.visible) {\n            const { selectedCols } = nextProps;\n            return {\n                selectedCols,\n            };\n        }\n        return null;\n    }\n    render() {\n        const { sortConfigs = [], dataIndex, locale } = this.props;\n        const { visible, openKeys } = this.state;\n        const sortDirection = sortConfigs.find((s) => s.sortCol === dataIndex);\n        const selectedKeys = sortDirection ? [sortDirection.sort] : [];\n        console.log(selectedKeys, openKeys, sortConfigs);\n        return (<Popover visible={visible} placement=\"bottomLeft\" content={<Menu onClick={this.onClick} selectedKeys={selectedKeys} style={{ width: '124px' }} openKeys={openKeys}>\n            <Item key=\"asc\">\n              <Icon type=\"sort-ascending\"/>\n              {get(locale, 'Ascending')}\n            </Item>\n            <Item key=\"desc\">\n              <Icon type=\"sort-descending\"/>\n              {get(locale, 'Descending')}\n            </Item>\n            <Divider />\n            <SubMenu key=\"cols\" popupClassName=\"seid-custom-layout\" title={[<Icon key=\"icon\" type=\"shrink\"/>, get(locale, 'Columns')]} onTitleClick={this.onTitleClick}>\n              {this.getColumnCheckbox()}\n            </SubMenu>\n          </Menu>} trigger=\"hover\" overlayClassName=\"seid-custom-layout\" onVisibleChange={v => {\n            if (!v) {\n                this.onFinishChange();\n            }\n        }}>\n        {this.node}\n      </Popover>);\n    }\n}\nexport default Tool;\n"],"file":"Tool.js"}