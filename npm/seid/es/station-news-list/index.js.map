{"version":3,"sources":["station-news-list/index.jsx"],"names":["React","PureComponent","isEmpty","get","Button","Form","Select","Input","Row","Col","Card","Icon","DatePicker","message","Detail","StandardTable","request","defaultLocale","SeidLocaleReceiver","ButtonGroup","Group","Option","RangePicker","Search","defautlRequestMethod","defautlNewsStatusRequestMethod","handleMessageStatus","status","locale","handleMessageType","StationNewsList","props","defaultActionColumns","title","key","dataIndex","width","align","render","_","record","event","preventDefault","lookDetail","defaultColumns","__","index","text","messageAttachment","color","marginLeft","getQueryParams","searchValues","state","getInitPagination","handleGet","extraParams","getNewsListUrl","getNewsListParams","getNewsListRequestMethod","setState","loading","method","url","params","then","res","data","list","pagination","current","pageNum","pageSize","total","error","console","pageIndex","visible","currentRecord","onSearch","value","id","pDateBegin","length","format","undefined","pDateEnd","getPagination","handleCancel","onTablePageChange","handleSetStatus","selectedRows","warn","messageIds","map","item","messageId","userId","toString","messageStatus","handleEditType","setNewsStatusUrl","setNewsStatusUrlRequestMethod","success","onSelectRow","handleClearValue","e","target","renderCom","form","columns","getNewsDetailUrl","getNewsDetailUrlRequestMethod","modalProps","detailContent","finalColumns","concat","getFieldDecorator","newsType","newsState","propsToDetail","onCancel","md","xl","lg","span","initialValue","onClick","defaultProps","create"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport Button from 'antd/es/button';\nimport Form from 'antd/es/form/Form';\nimport Select from 'antd/es/select';\nimport Input from 'antd/es/input';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport Card from 'antd/es/card';\nimport Icon from 'antd/es/icon';\nimport DatePicker from 'antd/es/date-picker';\nimport message from 'antd/es/message';\nimport Detail from './detail';\nimport StandardTable from '../ext-table';\nimport { request } from '../utils';\nimport defaultLocale from './locale';\nimport SeidLocaleReceiver from '../seid-locale-receiver';\nconst ButtonGroup = Button.Group;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst { Search } = Input;\nconst defautlRequestMethod = 'get'; // 默认请求方式\nconst defautlNewsStatusRequestMethod = 'put'; // 改变消息状态的默认请求方式\n// 转义消息状态\nexport const handleMessageStatus = (status, locale) => {\n    switch (status) {\n        case '0':\n            return get(locale, 'unread');\n        case '1':\n            return get(locale, 'read');\n        case '2':\n            return get(locale, 'deleted');\n        default:\n            return get(locale, 'none');\n    }\n};\n// 转义消息类型\nexport const handleMessageType = (status, locale) => {\n    switch (status) {\n        case '0':\n            return get(locale, 'systemMessage');\n        case '1':\n            return get(locale, 'groupMessage');\n        case '2':\n            return get(locale, 'personalMessage');\n        default:\n            return get(locale, 'none');\n    }\n};\nclass StationNewsList extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.defaultActionColumns = [\n            {\n                title: '操作',\n                key: 'action',\n                dataIndex: 'action',\n                width: 50,\n                align: 'center',\n                render: (_, record) => (<span>\n          <a key=\"look\" onClick={event => {\n                    event.preventDefault();\n                    this.lookDetail(record);\n                }}>\n            查看\n          </a>\n        </span>),\n            },\n        ];\n        this.defaultColumns = [\n            {\n                title: get(this.locale, 'index'),\n                dataIndex: 'index',\n                key: 'index',\n                width: 80,\n                align: 'center',\n                render: (_, __, index) => index + 1,\n            },\n            {\n                title: get(this.locale, 'status'),\n                dataIndex: 'messageStatus',\n                key: 'messageStatus',\n                width: 120,\n                align: 'center',\n                render: (text, record) => (<div>\n          {handleMessageStatus(text, this.locale)}\n          {record.messageAttachment ? (<Icon type=\"link\" style={{ color: 'rgba(0,0,0,0.45)', marginLeft: 2 }}/>) : null}\n        </div>),\n            },\n            {\n                title: get(this.locale, 'date'),\n                dataIndex: 'publishDate',\n                key: 'publishDate',\n                width: 200,\n                align: 'center',\n            },\n            {\n                title: get(this.locale, 'category'),\n                dataIndex: 'messageType',\n                key: 'messageType',\n                width: 130,\n                align: 'center',\n                render: text => handleMessageType(text, this.locale),\n            },\n            {\n                title: get(this.locale, 'title'),\n                dataIndex: 'messageTitle',\n                key: 'messageTitle',\n            },\n            {\n                title: get(this.locale, 'publisher'),\n                dataIndex: 'publisherNick',\n                key: 'publisherNick',\n                width: 160,\n                align: 'center',\n            },\n        ];\n        // 获取查询列表的参数(分页信息和查询参数)\n        this.getQueryParams = () => {\n            const { searchValues } = this.state;\n            return Object.assign(Object.assign({}, this.getInitPagination()), searchValues);\n        };\n        // 获取未处理的站内消息\n        this.handleGet = (extraParams = {}) => {\n            const { getNewsListUrl, getNewsListParams, getNewsListRequestMethod } = this.props;\n            if (!getNewsListRequestMethod)\n                return;\n            this.setState({\n                loading: true,\n            });\n            request({\n                method: getNewsListRequestMethod,\n                url: getNewsListUrl,\n                params: Object.assign(Object.assign(Object.assign({}, this.getQueryParams()), getNewsListParams), extraParams),\n            })\n                .then(res => {\n                const { data = {} } = res;\n                this.setState({\n                    loading: false,\n                    data: {\n                        list: data.list || [],\n                        pagination: {\n                            current: data.pageNum,\n                            pageSize: data.pageSize,\n                            total: data.total,\n                        },\n                    },\n                });\n            })\n                .catch(error => {\n                this.setState({\n                    loading: false,\n                });\n                console.error('error', error);\n            });\n        };\n        // 获取当前的页码信息\n        this.getInitPagination = () => {\n            const { data: { pagination = {} }, } = this.state;\n            if (!pagination)\n                return;\n            const { current = 1, pageSize } = pagination;\n            return {\n                pageIndex: current - 1,\n                pageSize,\n            };\n        };\n        this.lookDetail = (record) => {\n            this.setState({\n                visible: true,\n                currentRecord: record,\n            });\n        };\n        // 查询\n        this.onSearch = (value, id) => {\n            const { searchValues } = this.state;\n            let params = {};\n            if (id === 'pDateBegin') {\n                params = {\n                    pDateBegin: value.length ? value[0].format('YYYY-MM-DD 00:00:00') : undefined,\n                    pDateEnd: value.length ? value[1].format('YYYY-MM-DD 23:59:59') : undefined,\n                };\n            }\n            else {\n                params = {\n                    [id]: value,\n                };\n            }\n            this.setState({\n                searchValues: Object.assign(Object.assign({}, searchValues), params),\n            }, () => {\n                this.handleGet({ pageIndex: 0 });\n            });\n            // 调用接口查询数据\n        };\n        this.getPagination = () => {\n            const { data } = this.state;\n            const { pagination } = data;\n            return pagination ? { pageSize: pagination.pageSize, current: pagination.current } : false;\n        };\n        this.handleCancel = () => {\n            this.setState({ visible: false });\n        };\n        this.onTablePageChange = ({ current, pageSize }) => {\n            const { data } = this.state;\n            this.setState({\n                data: Object.assign(Object.assign({}, data), { pagination: {\n                        current,\n                        pageSize,\n                    } }),\n            }, () => {\n                this.handleGet();\n            });\n        };\n        this.handleSetStatus = (value) => {\n            const { getNewsListParams } = this.props;\n            const { selectedRows } = this.state;\n            if (!selectedRows.length) {\n                message.warn(get(this.locale, 'processWarning'));\n                return;\n            }\n            const messageIds = selectedRows.map((item) => item.messageId);\n            const params = {\n                userId: getNewsListParams.userId,\n                messageIds: messageIds.toString(),\n                messageStatus: value,\n            };\n            this.handleEditType(params);\n        };\n        // 修改消息类型\n        this.handleEditType = (params) => {\n            const { setNewsStatusUrl, setNewsStatusUrlRequestMethod } = this.props;\n            if (!setNewsStatusUrlRequestMethod)\n                return;\n            this.setState({\n                loading: true,\n            });\n            request({ method: setNewsStatusUrlRequestMethod, url: setNewsStatusUrl, params })\n                .then(() => {\n                message.success(get(this.locale, 'successful'));\n                this.setState({\n                    loading: false,\n                    selectedRows: [],\n                }, () => {\n                    this.handleGet({ pageIndex: 0 });\n                });\n            })\n                .catch(error => {\n                this.setState({\n                    loading: true,\n                });\n                console.error('error', error);\n            });\n        };\n        // 获取表格的选中项\n        this.onSelectRow = (selectedRows) => {\n            this.setState({\n                selectedRows,\n            });\n        };\n        // 清空标题搜索值\n        this.handleClearValue = (e, id) => {\n            const value = e.target.value;\n            if (isEmpty(value)) {\n                this.onSearch('', id);\n            }\n        };\n        this.renderCom = (locale) => {\n            const { form, columns = this.defaultColumns, getNewsDetailUrl, getNewsListParams, getNewsDetailUrlRequestMethod, modalProps, detailContent, } = this.props;\n            const { visible, loading, currentRecord, selectedRows } = this.state;\n            const finalColumns = this.defaultActionColumns.concat(columns);\n            const { getFieldDecorator } = form;\n            const { data } = this.state;\n            const newsType = (<Select className=\"whole-width\" allowClear onChange={(value) => {\n                this.onSearch(value, 'messageType');\n            }}>\n        <Option value={0}>{get(locale, 'systemMessage')}</Option>\n        <Option value={1}>{get(locale, 'groupMessage')}</Option>\n        <Option value={2}>{get(locale, 'personalMessage')}</Option>\n        <Option value=\"\">{get(locale, 'all')}</Option>\n      </Select>);\n            const newsState = (<Select className=\"whole-width\" allowClear onChange={(value) => {\n                this.onSearch(value, 'messageStatus');\n            }}>\n        <Option value=\"0\">{get(locale, 'unread')}</Option>\n        <Option value=\"1\">{get(locale, 'read')}</Option>\n        <Option value=\"2\">{get(locale, 'deleted')}</Option>\n        <Option value=\"\">{get(locale, 'all')}</Option>\n      </Select>);\n            const propsToDetail = {\n                getNewsDetailUrl,\n                getNewsDetailUrlRequestMethod,\n                visible,\n                onCancel: this.handleCancel,\n                params: {\n                    userId: getNewsListParams.userId,\n                    messageId: currentRecord ? currentRecord.messageId : undefined,\n                },\n                modalProps,\n                detailContent,\n            };\n            return (<Card>\n        <div className=\"station-news-list-action-btn\">\n          <div className=\"station-news-btn-left\">\n            <ButtonGroup>\n              <Button onClick={() => this.handleSetStatus('1')} value=\"1\" type=\"primary\" key=\"haveRead\">\n                {get(locale, 'setToRead')}\n              </Button>\n              <Button onClick={() => this.handleSetStatus('0')} value=\"0\" key=\"unread\">\n                {get(locale, 'setToUnread')}\n              </Button>\n              <Button onClick={() => this.handleSetStatus('2')} value=\"2\" key=\"del\">\n                {get(locale, 'delete')}\n              </Button>\n            </ButtonGroup>\n          </div>\n          <Form className=\"station-news-btn-right\">\n            <Row style={{ width: '100%' }} type=\"flex\" justify=\"end\">\n              <Col xs={0} sm={0} md={10} lg={8} xl={5} xxl={6}>\n                <Form.Item label={get(locale, 'messageCategory')} labelCol={{ md: 8, xl: 9 }} wrapperCol={{ md: 15, lg: 16, xl: 15 }}>\n                  {getFieldDecorator('messageType')(newsType)}\n                </Form.Item>\n              </Col>\n              <Col xs={0} sm={0} lg={0} xl={8} xxl={6}>\n                <Form.Item label={get(locale, 'sendDate')} labelCol={{ span: 8, xl: 6 }} wrapperCol={{ span: 16, xl: 18 }}>\n                  {getFieldDecorator('pDateBegin')(<RangePicker allowClear onChange={value => {\n                this.onSearch(value, 'pDateBegin');\n            }}/>)}\n                </Form.Item>\n              </Col>\n              <Col xs={0} sm={0} md={0} lg={8} xl={5} xxl={6}>\n                <Form.Item label={get(locale, 'messageStatus')} labelCol={{ lg: 8, xl: 9 }} wrapperCol={{ md: 15, xl: 14 }}>\n                  {getFieldDecorator('messageStatus', {\n                initialValue: '0',\n            })(newsState)}\n                </Form.Item>\n              </Col>\n              <Col xs={20} sm={20} md={12} lg={8} xl={6} xxl={5}>\n                <Form.Item wrapperCol={{ span: 24 }}>\n                  {getFieldDecorator('keyword')(<Search placeholder={get(locale, 'typeKeyWords')} className=\"whole-width\" allowClear onSearch={value => this.onSearch(value, 'keyword')} onChange={e => this.handleClearValue(e, 'keyword')}/>)}\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n        <StandardTable selectedRows={selectedRows} columns={finalColumns} data={data} rowKey=\"messageId\" loading={loading} onChange={this.onTablePageChange} onRow={(record) => ({\n                onClick: () => this.lookDetail(record),\n            })}/>\n        {visible ? <Detail locale={locale} {...propsToDetail}/> : null}\n      </Card>);\n        };\n        this.state = {\n            data: {\n                list: [],\n                pagination: { pageSize: 15, current: 1, total: 0 },\n            },\n            visible: false,\n            loading: false,\n            searchValues: { messageStatus: '0' },\n            // selectedRow: [],\n            selectedRows: [],\n            currentRecord: undefined,\n        };\n    }\n    componentDidMount() {\n        this.handleGet();\n    }\n    render() {\n        return (<SeidLocaleReceiver componentName=\"StationNewList\" defaultLocale={defaultLocale}>\n        {this.renderCom}\n      </SeidLocaleReceiver>);\n    }\n}\nStationNewsList.defaultProps = {\n    getNewsListRequestMethod: defautlRequestMethod,\n    setNewsStatusUrlRequestMethod: defautlNewsStatusRequestMethod,\n    getNewsDetailUrlRequestMethod: defautlRequestMethod,\n};\nexport default Form.create()(StationNewsList);\n"],"file":"index.js"}