{"version":3,"sources":["station-news-icon/index.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PureComponent","Badge","Icon","omit","SocketMessage","request","DEFAULT_TIME_INTERVAL","StationNewsIcon","arguments","state","count","requestParams","handleGet","props","targetUrl","keys","url","params","then","res","data","setState","unreadQty","error","console","redirectToPages","openStationNewsList","timeInterval","timer","setInterval","window","clearInterval","nextProps","propsParams","JSON","stringify","_a","iconType","iconStyle","fontSize","defaultProps"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { PureComponent } from 'react';\nimport Badge from 'antd/es/badge';\nimport Icon from 'antd/es/icon';\nimport omit from 'lodash/omit';\nimport SocketMessage from './socketMessage';\nimport { request } from '../utils';\nconst DEFAULT_TIME_INTERVAL = 60000; // 默认请求时间间隔1分钟\nclass StationNewsIcon extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            count: 0,\n            requestParams: {},\n        };\n        // 获取未处理的站内消息数量\n        this.handleGet = () => {\n            const { targetUrl, requestParams } = this.props;\n            if (requestParams && Object.keys(requestParams).length) {\n                request({ url: targetUrl, params: requestParams })\n                    .then(res => {\n                    const { data = {} } = res;\n                    this.setState({\n                        count: data.unreadQty,\n                        requestParams: Object.assign({}, requestParams),\n                    });\n                })\n                    .catch(error => {\n                    console.error('error', error);\n                    this.setState({ requestParams: Object.assign({}, requestParams) });\n                });\n            }\n        };\n        this.redirectToPages = () => {\n            // 打开未处理消息的新页签\n            const { openStationNewsList } = this.props;\n            if (openStationNewsList)\n                openStationNewsList();\n        };\n    }\n    componentDidMount() {\n        const { timeInterval } = this.props;\n        this.handleGet();\n        // @ts-ignore\n        this.timer = setInterval(() => {\n            this.handleGet();\n        }, timeInterval);\n    }\n    componentWillUnmount() {\n        window.clearInterval(this.timer);\n    }\n    componentWillReceiveProps(nextProps) {\n        const { requestParams } = this.state;\n        const { requestParams: propsParams } = nextProps;\n        if (JSON.stringify(requestParams) !== JSON.stringify(propsParams)) {\n            this.handleGet();\n        }\n    }\n    render() {\n        const _a = this.props, { iconType, iconStyle } = _a, props = __rest(_a, [\"iconType\", \"iconStyle\"]);\n        const { count } = this.state;\n        return (<div onClick={this.redirectToPages}>\n        <Badge count={count} {...omit(props, ['targetUrl', 'requestParams', 'openStationNewsList', 'timeInterval'])}>\n          <Icon type={iconType} style={Object.assign({ fontSize: 32 }, iconStyle)}/>\n        </Badge>\n      </div>);\n    }\n}\nStationNewsIcon.defaultProps = {\n    iconType: 'bell',\n    timeInterval: DEFAULT_TIME_INTERVAL,\n};\nStationNewsIcon.SocketMessage = SocketMessage;\nexport default StationNewsIcon;\n"],"file":"index.js"}