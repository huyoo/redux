{"version":3,"sources":["dynamic-form/index.jsx"],"names":["React","Form","Button","FormsItem","DynamicForms","arguments","_onSubmit","event","props","onSubmit","form","preventDefault","fieldsList","formItemLayout","columns","submitText","getFieldDecorator","FormItem","Item","map","item","displayName","name","initialValue","value","rules","validateFirst","Component","create"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IACMC,Y;;;;;AACF,0BAAc;AAAA;;AAAA;;AACV,uFAASC,SAAT;;AACA,UAAKC,SAAL,GAAiB,UAACC,KAAD,EAAW;AAAA,wBACG,MAAKC,KADR;AAAA,UAChBC,QADgB,eAChBA,QADgB;AAAA,UACNC,IADM,eACNA,IADM;AAExBH,MAAAA,KAAK,CAACI,cAAN;;AACA,UAAIF,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACC,IAAD,CAAR;AACH;AACJ,KAND;;AAFU;AASb;;;;6BACQ;AAAA,yBACoE,KAAKF,KADzE;AAAA,UACGE,IADH,gBACGA,IADH;AAAA,UACSE,UADT,gBACSA,UADT;AAAA,UACqBC,cADrB,gBACqBA,cADrB;AAAA,UACqCC,OADrC,gBACqCA,OADrC;AAAA,+CAC8CC,UAD9C;AAAA,UAC8CA,UAD9C,sCAC2D,IAD3D;AAAA,UAEGC,iBAFH,GAEyBN,IAFzB,CAEGM,iBAFH;AAGL,UAAMC,QAAQ,GAAGhB,IAAI,CAACiB,IAAtB;AACA,aAAQ,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKZ;AAArB,SACPM,UAAU,CAACO,GAAX,CAAe,UAACC,IAAD,EAAU;AACtB,eAAQ,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAEN,OAAO,kCAA2BA,OAA3B,IAAuC;AAAnE,WAA2ED,cAA3E;AAA2F,UAAA,KAAK,EAAEO,IAAI,CAACC,WAAvG;AAAoH,UAAA,GAAG,EAAED,IAAI,CAACE;AAA9H,YACLN,iBAAiB,CAACI,IAAI,CAACE,IAAN,EAAY;AAC5BC,UAAAA,YAAY,EAAEH,IAAI,CAACI,KADS;AAE5BC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAFgB;AAG5BC,UAAAA,aAAa,EAAE;AAHa,SAAZ,CAAjB,CAIA,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAEN,IAAjB;AAAuB,UAAA,IAAI,EAAEV;AAA7B,UAJA,CADK,CAAR;AAOH,OARA,CADO,EAUR,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC;AAApB,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC;AAAjB,SAA2BK,UAA3B,CADF,CAVQ,CAAR;AAcH;;;;EA7BsBf,KAAK,CAAC2B,S;;AA+BjC,IAAMC,MAAM,GAAG3B,IAAI,CAAC2B,MAApB;AACA,eAAeA,MAAM,GAAGxB,YAAH,CAArB","sourcesContent":["import * as React from 'react';\nimport Form from 'antd/es/form/Form';\nimport Button from 'antd/es/button';\nimport FormsItem from './FormItem';\nclass DynamicForms extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._onSubmit = (event) => {\n            const { onSubmit, form } = this.props;\n            event.preventDefault();\n            if (onSubmit) {\n                onSubmit(form);\n            }\n        };\n    }\n    render() {\n        const { form, fieldsList, formItemLayout, columns, submitText = '确定' } = this.props;\n        const { getFieldDecorator } = form;\n        const FormItem = Form.Item;\n        return (<Form onSubmit={this._onSubmit}>\n        {fieldsList.map((item) => {\n            return (<FormItem className={columns ? `seid-formItem-columns${columns}` : ''} {...formItemLayout} label={item.displayName} key={item.name}>\n              {getFieldDecorator(item.name, {\n                initialValue: item.value,\n                rules: item.rules,\n                validateFirst: true,\n            })(<FormsItem item={item} form={form}/>)}\n            </FormItem>);\n        })}\n        <FormItem className=\"seid-formItem-submit\">\n          <Button htmlType=\"submit\">{submitText}</Button>\n        </FormItem>\n      </Form>);\n    }\n}\nconst create = Form.create;\nexport default create()(DynamicForms);\n"],"file":"index.js"}