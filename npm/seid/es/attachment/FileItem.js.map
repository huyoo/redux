{"version":3,"sources":["attachment/FileItem.jsx"],"names":["React","PureComponent","Item","Avatar","omit","isString","get","moment","Progress","Tooltip","ExtIcon","getAvatar","file","size","name","fileName","thumbUrl","nameStr","fileType","split","pop","fontSize","optionalProps","FileItem","arguments","getStatus","status","props","undefined","downloadFile","deleteFile","previewFile","shareFile","getProcess","mode","position","top","uid","index","getItemDescription","percent","getUploadTime","getUploadUser","error","normal","desc","uploadUser","uploadTime","fileItem","format","avatar","width","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AAAA,MAC1BC,IAD0B,GACGF,IADH,CAC1BE,IAD0B;AAAA,MACpBC,QADoB,GACGH,IADH,CACpBG,QADoB;AAAA,MACVC,QADU,GACGJ,IADH,CACVI,QADU;AAElC,MAAMC,OAAO,GAAGH,IAAI,IAAIC,QAAxB;;AACA,MAAIC,QAAJ,EAAc;AACV,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,IAAI,EAAEH,IAA7B;AAAmC,MAAA,GAAG,EAAEG;AAAxC,MAAP;AACH;;AACD,MAAME,QAAQ,GAAGD,OAAO,IAAIA,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmBC,GAAnB,EAA5B;;AACA,UAAQF,QAAR;AACI,SAAK,KAAL;AACA,SAAK,MAAL;AACI,aAAQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAEL;AAA7B,SACV,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAER;AAAZ,SAAhB;AAAoC,QAAA,IAAI,EAAC;AAAzC,QADU,CAAR;;AAGJ,SAAK,KAAL;AACA,SAAK,MAAL;AACI,aAAQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SACV,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAER;AAAZ,SAAhB;AAAoC,QAAA,IAAI,EAAC;AAAzC,QADU,CAAR;;AAGJ,SAAK,KAAL;AACA,SAAK,MAAL;AACI,aAAQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SACV,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAER;AAAZ,SAAhB;AAAoC,QAAA,IAAI,EAAC;AAAzC,QADU,CAAR;;AAGJ,SAAK,KAAL;AACI,aAAQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SACV,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAER;AAAZ,SAAhB;AAAoC,QAAA,IAAI,EAAC;AAAzC,QADU,CAAR;;AAGJ;AACI,aAAQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SACV,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAER;AAAZ,SAAhB;AAAoC,QAAA,IAAI,EAAC;AAAzC,QADU,CAAR;AArBR;AAyBH;AACD,IAAMS,aAAa,GAAG,CAAC,OAAD,EAAU,oBAAV,CAAtB;;IACMC,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV,mFAASC,SAAT;;AACA,UAAKC,SAAL,GAAiB,YAAM;AAAA,UACXC,MADW,GACA,MAAKC,KADL,CACXD,MADW;;AAEnB,cAAQA,MAAR;AACI,aAAK,WAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,OAAL;AACI,iBAAO,WAAP;;AACJ,aAAK,SAAL;AACI,iBAAO,SAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,SAAP;;AACJ,aAAK,SAAL;AACI,iBAAO,SAAP;;AACJ;AACI,iBAAOE,SAAP;AAZR;AAcH,KAhBD;;AAiBA,UAAKC,YAAL,GAAoB,YAAM;AACtB,UAAMjB,IAAI,GAAGR,IAAI,CAAC,MAAKuB,KAAN,EAAaL,aAAb,CAAjB;AADsB,UAEdO,YAFc,GAEG,MAAKF,KAFR,CAEdE,YAFc;;AAGtB,UAAIA,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACjB,IAAD,CAAZ;AACH;AACJ,KAND;;AAOA,UAAKkB,UAAL,GAAkB,YAAM;AACpB,UAAMlB,IAAI,GAAGR,IAAI,CAAC,MAAKuB,KAAN,EAAaL,aAAb,CAAjB;AADoB,UAEZQ,UAFY,GAEG,MAAKH,KAFR,CAEZG,UAFY;;AAGpB,UAAIA,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAAClB,IAAD,CAAV;AACH;AACJ,KAND;;AAOA,UAAKmB,WAAL,GAAmB,YAAM;AACrB,UAAMnB,IAAI,GAAGR,IAAI,CAAC,MAAKuB,KAAN,EAAaL,aAAb,CAAjB;AADqB,UAEbS,WAFa,GAEG,MAAKJ,KAFR,CAEbI,WAFa;;AAGrB,UAAIA,WAAJ,EAAiB;AACbA,QAAAA,WAAW,CAACnB,IAAD,CAAX;AACH;AACJ,KAND;;AAOA,UAAKoB,SAAL,GAAiB,YAAM;AACnB,UAAMpB,IAAI,GAAGR,IAAI,CAAC,MAAKuB,KAAN,EAAaL,aAAb,CAAjB;AADmB,UAEXU,SAFW,GAEG,MAAKL,KAFR,CAEXK,SAFW;;AAGnB,UAAIA,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACpB,IAAD,CAAT;AACH;AACJ,KAND;;AAOA,UAAKqB,UAAL,GAAkB,YAAM;AAAA,wBAC+C,MAAKN,KADpD;AAAA,UACZO,IADY,eACZA,IADY;AAAA,UACNF,SADM,eACNA,SADM;AAAA,UACKF,UADL,eACKA,UADL;AAAA,UACiBD,YADjB,eACiBA,YADjB;AAAA,UAC+BE,WAD/B,eAC+BA,WAD/B;AAEpB,aAAQ;AAAK,QAAA,KAAK,EAAEG,IAAI,KAAK,QAAT,GAAoB;AAAE,mBAAO,OAAT;AAAkBC,UAAAA,QAAQ,EAAE,UAA5B;AAAwCC,UAAAA,GAAG,EAAE;AAA7C,SAApB,GAA2ER,SAAvF;AAAkG,QAAA,SAAS,EAAC;AAA5G,SACZ;AAAK,QAAA,SAAS,EAAC;AAAf,SACGC,YAAY,IAAK,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf,SACd,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAKA,YAAvB;AAAqC,QAAA,IAAI,MAAzC;AAA0C,QAAA,SAAS,EAAC,WAApD;AAAgE,QAAA,IAAI,EAAC;AAArE,QADc,CADpB,EAIGC,UAAU,IAAK,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf,SACZ,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAKA,UAAvB;AAAmC,QAAA,IAAI,MAAvC;AAAwC,QAAA,SAAS,EAAC,WAAlD;AAA8D,QAAA,IAAI,EAAC;AAAnE,QADY,CAJlB,EAOGC,WAAW,IAAK,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf,SACb,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAKA,WAAvB;AAAoC,QAAA,IAAI,MAAxC;AAAyC,QAAA,SAAS,EAAC,WAAnD;AAA+D,QAAA,IAAI,EAAC;AAApE,QADa,CAPnB,EAUGC,SAAS,IAAK,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf,SACX,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAKA,SAAvB;AAAkC,QAAA,IAAI,MAAtC;AAAuC,QAAA,SAAS,EAAC,WAAjD;AAA6D,QAAA,IAAI,EAAC;AAAlE,QADW,CAVjB,CADY,CAAR;AAgBH,KAlBD;;AA/CU;AAkEb;;;;6BACQ;AAAA,yBACyG,KAAKL,KAD9G;AAAA,UACGU,GADH,gBACGA,GADH;AAAA,UACQvB,IADR,gBACQA,IADR;AAAA,UACcwB,KADd,gBACcA,KADd;AAAA,UACqBC,kBADrB,gBACqBA,kBADrB;AAAA,UACyCC,OADzC,gBACyCA,OADzC;AAAA,UACkDC,aADlD,gBACkDA,aADlD;AAAA,UACiEC,aADjE,gBACiEA,aADjE;AAAA,UACgFR,IADhF,gBACgFA,IADhF;AAAA,UACsFR,MADtF,gBACsFA,MADtF;AAAA,UAC8FiB,KAD9F,gBAC8FA,KAD9F;AAEL,UAAMC,MAAM,GAAGV,IAAI,KAAK,QAAxB;AACA,UAAIW,IAAI,GAAG,IAAX;AACA,UAAIC,UAAU,GAAG,IAAjB;AACA,UAAIC,UAAU,GAAG,IAAjB;;AACA,UAAIR,kBAAkB,IAAIK,MAA1B,EAAkC;AAC9B,YAAIvC,QAAQ,CAACkC,kBAAD,CAAZ,EAAkC;AAC9BM,UAAAA,IAAI,GAAGvC,GAAG,CAAC,KAAKqB,KAAN,EAAaY,kBAAb,CAAV;AACH,SAFD,MAGK;AACD;AACA,cAAMS,QAAQ,GAAG5C,IAAI,CAAC,KAAKuB,KAAN,EAAaL,aAAb,CAArB;AACAuB,UAAAA,IAAI,GAAGN,kBAAkB,CAACS,QAAD,EAAWV,KAAX,CAAzB;AACH;AACJ;;AACD,UAAIG,aAAJ,EAAmB;AACf,YAAIpC,QAAQ,CAACoC,aAAD,CAAZ,EAA6B;AACzBM,UAAAA,UAAU,GAAGzC,GAAG,CAAC,KAAKqB,KAAN,EAAac,aAAb,CAAhB;;AACA,cAAIpC,QAAQ,CAAC0C,UAAD,CAAZ,EAA0B;AACtBA,YAAAA,UAAU,GAAGxC,MAAM,CAACwC,UAAD,CAAN,CAAmBE,MAAnB,CAA0B,qBAA1B,CAAb;AACH;AACJ,SALD,MAMK;AACD;AACA,cAAMD,SAAQ,GAAG5C,IAAI,CAAC,KAAKuB,KAAN,EAAaL,aAAb,CAArB;;AACAyB,UAAAA,UAAU,GAAGN,aAAa,CAACO,SAAD,EAAWV,KAAX,CAA1B;;AACA,cAAIjC,QAAQ,CAAC0C,UAAD,CAAZ,EAA0B;AACtBA,YAAAA,UAAU,GAAGxC,MAAM,CAACwC,UAAD,CAAN,CAAmBE,MAAnB,CAA0B,qBAA1B,CAAb;AACH;AACJ;AACJ;;AACD,UAAIP,aAAJ,EAAmB;AACf,YAAIrC,QAAQ,CAACqC,aAAD,CAAZ,EAA6B;AACzBI,UAAAA,UAAU,GAAGxC,GAAG,CAAC,KAAKqB,KAAN,EAAae,aAAb,CAAhB;AACH,SAFD,MAGK;AACD;AACA,cAAMM,UAAQ,GAAG5C,IAAI,CAAC,KAAKuB,KAAN,EAAaL,aAAb,CAArB;;AACAwB,UAAAA,UAAU,GAAGJ,aAAa,CAACM,UAAD,EAAWV,KAAX,CAA1B;AACH;AACJ;;AACD,UAAMY,MAAM,GAAGN,MAAM,GAAGjC,SAAS,CAAC,KAAKgB,KAAN,EAAa,EAAb,CAAZ,GAA+B,IAApD;;AACA,UAAID,MAAM,KAAK,OAAf,EAAwB;AACpB,eAAQ,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEW;AAAX,WACV,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,MAAM,EAAEa,MAAnB;AAA2B,UAAA,KAAK,EAAEpC,IAAlC;AAAwC,UAAA,WAAW,EAAE+B;AAArD,UADU,EAEV;AAAK,UAAA,SAAS,EAAC;AAAf,WACG,KAAKZ,UAAL,EADH,EAEE;AAAK,UAAA,SAAS,EAAC;AAAf,WACGW,MAAM,IAAI,6DADb,EAEE,+BAAIE,UAAJ,CAFF,CAFF,EAME;AAAK,UAAA,SAAS,EAAC;AAAf,WACGF,MAAM,IAAI,6DADb,EAEE,+BAAIG,UAAJ,CAFF,CANF,EAUE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAEJ;AAAhB,WACE,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEQ,YAAAA,KAAK,EAAE;AAAT,WAAjB;AAAqC,UAAA,MAAM,EAAE,KAAK1B,SAAL,EAA7C;AAA+D,UAAA,OAAO,EAAEe;AAAxE,UADF,CADF,CAVF,CAFU,CAAR;AAmBH;;AACD,aAAQ,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEH;AAAX,SACR,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,MAAM,EAAEa,MAAnB;AAA2B,QAAA,KAAK,EAAEpC,IAAlC;AAAwC,QAAA,WAAW,EAAE+B;AAArD,QADQ,EAER;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKZ,UAAL,EADH,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGW,MAAM,IAAI,6DADb,EAEE,+BAAIE,UAAJ,CAFF,CAFF,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACGF,MAAM,IAAI,6DADb,EAEE,+BAAIG,UAAJ,CAFF,CANF,EAUE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAjB;AAAqC,QAAA,MAAM,EAAE,KAAK1B,SAAL,EAA7C;AAA+D,QAAA,OAAO,EAAEe;AAAxE,QADF,CAVF,CAFQ,CAAR;AAiBH;;;;EArJkBvC,a;;AAuJvBsB,QAAQ,CAAC6B,YAAT,GAAwB;AACpBV,EAAAA,aAAa,EAAE,4BADK;AAEpBH,EAAAA,kBAAkB,EAAE,oCAFA;AAGpBE,EAAAA,aAAa,EAAE;AAHK,CAAxB;AAKA,eAAelB,QAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport Item from 'antd/es/list/Item';\nimport Avatar from 'antd/es/avatar';\nimport omit from 'lodash/omit';\nimport isString from 'lodash/isString';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport Progress from 'antd/es/progress';\nimport Tooltip from 'antd/es/tooltip';\nimport ExtIcon from '../ext-icon';\nexport function getAvatar(file, size) {\n    const { name, fileName, thumbUrl } = file;\n    const nameStr = name || fileName;\n    if (thumbUrl) {\n        return <Avatar shape=\"square\" size={size} src={thumbUrl}/>;\n    }\n    const fileType = nameStr && nameStr.split('.').pop();\n    switch (fileType) {\n        case 'xls':\n        case 'xlsx':\n            return (<Avatar shape=\"square\" size={size}>\n          <ExtIcon style={{ fontSize: size }} type=\"excel\"/>\n        </Avatar>);\n        case 'doc':\n        case 'docx':\n            return (<Avatar shape=\"square\" size={size}>\n          <ExtIcon style={{ fontSize: size }} type=\"word\"/>\n        </Avatar>);\n        case 'ppt':\n        case 'pptx':\n            return (<Avatar shape=\"square\" size={size}>\n          <ExtIcon style={{ fontSize: size }} type=\"ppt\"/>\n        </Avatar>);\n        case 'pdf':\n            return (<Avatar shape=\"square\" size={size}>\n          <ExtIcon style={{ fontSize: size }} type=\"pdf\"/>\n        </Avatar>);\n        default:\n            return (<Avatar shape=\"square\" size={size}>\n          <ExtIcon style={{ fontSize: size }} type=\"file\"/>\n        </Avatar>);\n    }\n}\nconst optionalProps = ['index', 'getItemDescription'];\nclass FileItem extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.getStatus = () => {\n            const { status } = this.props;\n            switch (status) {\n                case 'uploading':\n                    return 'active';\n                case 'error':\n                    return 'exception';\n                case 'success':\n                    return 'success';\n                case 'done':\n                    return 'success';\n                case 'removed':\n                    return 'success';\n                default:\n                    return undefined;\n            }\n        };\n        this.downloadFile = () => {\n            const file = omit(this.props, optionalProps);\n            const { downloadFile } = this.props;\n            if (downloadFile) {\n                downloadFile(file);\n            }\n        };\n        this.deleteFile = () => {\n            const file = omit(this.props, optionalProps);\n            const { deleteFile } = this.props;\n            if (deleteFile) {\n                deleteFile(file);\n            }\n        };\n        this.previewFile = () => {\n            const file = omit(this.props, optionalProps);\n            const { previewFile } = this.props;\n            if (previewFile) {\n                previewFile(file);\n            }\n        };\n        this.shareFile = () => {\n            const file = omit(this.props, optionalProps);\n            const { shareFile } = this.props;\n            if (shareFile) {\n                shareFile(file);\n            }\n        };\n        this.getProcess = () => {\n            const { mode, shareFile, deleteFile, downloadFile, previewFile } = this.props;\n            return (<div style={mode === 'simple' ? { float: 'right', position: 'relative', top: '4px' } : undefined} className=\"listContentItem\">\n        <div className=\"processLine\">\n          {downloadFile && (<Tooltip title=\"下载\">\n              <ExtIcon onClick={this.downloadFile} antd className=\"animation\" type=\"cloud-download\"/>\n            </Tooltip>)}\n          {deleteFile && (<Tooltip title=\"删除\">\n              <ExtIcon onClick={this.deleteFile} antd className=\"animation\" type=\"close\"/>\n            </Tooltip>)}\n          {previewFile && (<Tooltip title=\"预览\">\n              <ExtIcon onClick={this.previewFile} antd className=\"animation\" type=\"eye\"/>\n            </Tooltip>)}\n          {shareFile && (<Tooltip title=\"分享\">\n              <ExtIcon onClick={this.shareFile} antd className=\"animation\" type=\"share-alt\"/>\n            </Tooltip>)}\n        </div>\n      </div>);\n        };\n    }\n    render() {\n        const { uid, name, index, getItemDescription, percent, getUploadTime, getUploadUser, mode, status, error, } = this.props;\n        const normal = mode === 'normal';\n        let desc = null;\n        let uploadUser = null;\n        let uploadTime = null;\n        if (getItemDescription && normal) {\n            if (isString(getItemDescription)) {\n                desc = get(this.props, getItemDescription);\n            }\n            else {\n                // @ts-ignore\n                const fileItem = omit(this.props, optionalProps);\n                desc = getItemDescription(fileItem, index);\n            }\n        }\n        if (getUploadTime) {\n            if (isString(getUploadTime)) {\n                uploadTime = get(this.props, getUploadTime);\n                if (isString(uploadTime)) {\n                    uploadTime = moment(uploadTime).format('YYYY-MM-DD HH:mm:ss');\n                }\n            }\n            else {\n                // @ts-ignore\n                const fileItem = omit(this.props, optionalProps);\n                uploadTime = getUploadTime(fileItem, index);\n                if (isString(uploadTime)) {\n                    uploadTime = moment(uploadTime).format('YYYY-MM-DD HH:mm:ss');\n                }\n            }\n        }\n        if (getUploadUser) {\n            if (isString(getUploadUser)) {\n                uploadUser = get(this.props, getUploadUser);\n            }\n            else {\n                // @ts-ignore\n                const fileItem = omit(this.props, optionalProps);\n                uploadUser = getUploadUser(fileItem, index);\n            }\n        }\n        const avatar = normal ? getAvatar(this.props, 48) : null;\n        if (status === 'error') {\n            return (<Item key={uid}>\n          <Item.Meta avatar={avatar} title={name} description={desc}/>\n          <div className=\"listContent\">\n            {this.getProcess()}\n            <div className=\"listContentItem\">\n              {normal && <span>上传用户</span>}\n              <p>{uploadUser}</p>\n            </div>\n            <div className=\"listContentItem\">\n              {normal && <span>上传时间</span>}\n              <p>{uploadTime}</p>\n            </div>\n            <div className=\"listContentItem\">\n              <Tooltip title={error}>\n                <Progress style={{ width: '180px' }} status={this.getStatus()} percent={percent}/>\n              </Tooltip>\n            </div>\n          </div>\n        </Item>);\n        }\n        return (<Item key={uid}>\n        <Item.Meta avatar={avatar} title={name} description={desc}/>\n        <div className=\"listContent\">\n          {this.getProcess()}\n          <div className=\"listContentItem\">\n            {normal && <span>上传用户</span>}\n            <p>{uploadUser}</p>\n          </div>\n          <div className=\"listContentItem\">\n            {normal && <span>上传时间</span>}\n            <p>{uploadTime}</p>\n          </div>\n          <div className=\"listContentItem\">\n            <Progress style={{ width: '180px' }} status={this.getStatus()} percent={percent}/>\n          </div>\n        </div>\n      </Item>);\n    }\n}\nFileItem.defaultProps = {\n    getUploadUser: 'response[0].uploadUserName',\n    getItemDescription: 'response[0].documentTypeEnumRemark',\n    getUploadTime: 'response[0].uploadedTime',\n};\nexport default FileItem;\n"],"file":"FileItem.js"}