{"version":3,"sources":["attachment/DownloadModal.jsx"],"names":["React","PureComponent","Checkbox","Button","List","message","isEmpty","get","moment","ExtModal","getAvatar","blobToFile","res","filename","data","headers","name","decodeURI","split","eLink","document","createElement","download","style","display","href","URL","createObjectURL","body","appendChild","click","revokeObjectURL","removeChild","DownloadModal","arguments","state","checkAll","batchVisible","downloading","e","target","checked","props","fileList","batchDownloadList","map","file","setState","batchDownloadClose","onClose","handlerBatchDownload","downloadFiles","error","locale","batchDownloadFileName","format","setTimeout","files","fileId","find","request","filter","then","handleChooseImgCheck","indexOf","id","length","batchDownload","marginLeft","close","item","includes","nextProps","prevState","visible"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Checkbox from 'antd/es/checkbox';\nimport Button from 'antd/es/button';\nimport List from 'antd/es/list';\nimport message from 'antd/es/message';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport ExtModal from '../ext-modal';\nimport { getAvatar } from './FileItem';\nexport const blobToFile = (res, filename) => {\n    const { data, headers } = res;\n    const name = filename || decodeURI(headers['content-disposition'].split('=')[1]);\n    const eLink = document.createElement('a');\n    eLink.download = name;\n    eLink.style.display = 'none';\n    eLink.href = URL.createObjectURL(data);\n    document.body.appendChild(eLink);\n    eLink.click();\n    URL.revokeObjectURL(eLink.href); // 释放URL 对象\n    document.body.removeChild(eLink);\n};\nclass DownloadModal extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            checkAll: false,\n            batchVisible: false,\n            downloading: false,\n        };\n        this.checkAll = (e) => {\n            if (e.target.checked) {\n                const { fileList = [] } = this.props;\n                const batchDownloadList = fileList.map((file) => get(file, 'response[0].id'));\n                this.setState({ batchDownloadList, checkAll: true });\n            }\n            else {\n                this.setState({ batchDownloadList: [], checkAll: false });\n            }\n        };\n        this.batchDownloadClose = () => {\n            this.setState({\n                batchVisible: false,\n                batchDownloadList: [],\n                checkAll: false,\n                downloading: false,\n            }, () => {\n                const { onClose } = this.props;\n                if (onClose) {\n                    onClose();\n                }\n            });\n        };\n        this.handlerBatchDownload = () => {\n            const { batchDownloadList } = this.state;\n            const { downloadFiles, fileList } = this.props;\n            if (!batchDownloadList || isEmpty(batchDownloadList)) {\n                message.error(get(this.locale, 'selectFileWarning'));\n                return;\n            }\n            const { batchDownloadFileName = moment().format('YYYYMMDD') } = this.props;\n            this.setState({ downloading: true });\n            setTimeout(() => {\n                if (downloadFiles) {\n                    const files = batchDownloadList.map(fileId => {\n                        return fileList.find(file => get(file, 'response[0].id') === fileId);\n                    });\n                    // @ts-ignore\n                    const request = downloadFiles(files.filter(file => !!file));\n                    if (request) {\n                        request\n                            .then((res) => {\n                            blobToFile(res, batchDownloadFileName);\n                            this.setState({\n                                downloading: false,\n                                batchVisible: false,\n                            });\n                        })\n                            .catch(() => {\n                            this.setState({\n                                downloading: false,\n                            });\n                        });\n                    }\n                }\n            }, 0);\n        };\n        this.handleChooseImgCheck = (fileId) => {\n            const { fileList = [] } = this.props;\n            const { batchDownloadList = [] } = this.state;\n            if (batchDownloadList.indexOf(fileId) > -1) {\n                this.setState({\n                    batchDownloadList: [...batchDownloadList.filter(id => id !== fileId)],\n                    checkAll: false,\n                });\n                return;\n            }\n            this.setState({\n                batchDownloadList: [...batchDownloadList, fileId],\n                checkAll: batchDownloadList.length === fileList.length - 1,\n            });\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { visible } = nextProps;\n        const { batchVisible } = prevState;\n        if ('visible' in nextProps && visible !== batchVisible) {\n            return {\n                batchVisible: visible,\n            };\n        }\n        return null;\n    }\n    render() {\n        const { locale, fileList = [] } = this.props;\n        this.locale = locale;\n        const { checkAll, batchVisible, downloading, batchDownloadList = [] } = this.state;\n        return (<ExtModal className=\"download-modal\" title={[\n            locale.batchDownload,\n            <Checkbox key=\"checkAll\" checked={checkAll} style={{ marginLeft: '8px' }} value onClick={this.checkAll}>\n            {get(locale, 'checkAll')}\n          </Checkbox>,\n        ]} destroyOnClose visible={batchVisible} footer={[\n            <Button key=\"back\" onClick={this.batchDownloadClose}>\n            {locale.close}\n          </Button>,\n            <Button key=\"batchDownload\" type=\"primary\" icon=\"download\" loading={downloading} onClick={this.handlerBatchDownload}>\n            {locale.batchDownload}\n          </Button>,\n        ]} afterClose={this.batchDownloadClose} onCancel={this.batchDownloadClose}>\n        <List itemLayout=\"horizontal\" dataSource={fileList} renderItem={(item) => (<div onClick={() => this.handleChooseImgCheck(get(item, 'response[0].id'))}>\n              <List.Item>\n                <List.Item.Meta avatar={getAvatar(item, 32)} title={item.name}/>\n                <Checkbox checked={batchDownloadList.includes(get(item, 'response[0].id'))}/>\n              </List.Item>\n            </div>)}/>\n      </ExtModal>);\n    }\n}\nexport default DownloadModal;\n"],"file":"DownloadModal.js"}