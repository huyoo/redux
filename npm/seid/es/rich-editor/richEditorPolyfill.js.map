{"version":3,"sources":["rich-editor/richEditorPolyfill.js"],"names":["transToCamelCase","str","re","replace","$0","$1","toUpperCase","setPolyfill","Object","getOwnPropertyNames","HTMLElement","prototype","indexOf","defineProperty","get","attributes","name","value","obj","i","length","nodeName","slice","push","nodeValue","j","dataSetPolyfill"],"mappings":"AAAA;;AACA;AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,GAAG,EAAI;AAC5B,MAAMC,EAAE,GAAG,QAAX;AACA,SAAOD,GAAG,CAACE,OAAJ,CAAYD,EAAZ,EAAgB,UAAUE,EAAV,EAAcC,EAAd,EAAkB;AACrC,WAAOA,EAAE,CAACC,WAAH,EAAP;AACH,GAFM,CAAP;AAGH,CALD;;AAMA,IAAIC,WAAW,GAAG,uBAAY;AAC1B,MAAIC,MAAM,CAACC,mBAAP,CAA2BC,WAAW,CAACC,SAAvC,EAAkDC,OAAlD,CAA0D,SAA1D,MAAyE,CAAC,CAA9E,EAAiF;AAC7EJ,IAAAA,MAAM,CAACK,cAAP,CAAsBH,WAAW,CAACC,SAAlC,EAA6C,SAA7C,EAAwD;AACpDG,MAAAA,GAAG,EAAE,eAAY;AACb,YAAMC,UAAU,GAAG,KAAKA,UAAxB;AACA,YAAMC,IAAI,GAAG,EAAb;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAIC,GAAG,GAAG,EAAV;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,cAAIJ,UAAU,CAACI,CAAD,CAAV,CAAcE,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,KAAsC,OAA1C,EAAmD;AAC/CN,YAAAA,IAAI,CAACO,IAAL,CAAUR,UAAU,CAACI,CAAD,CAAV,CAAcE,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,CAAV;AACAL,YAAAA,KAAK,CAACM,IAAN,CAAWR,UAAU,CAACI,CAAD,CAAV,CAAcK,SAAzB;AACH;AACJ;;AACD,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACI,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClCP,UAAAA,GAAG,CAACF,IAAI,CAACS,CAAD,CAAL,CAAH,GAAeR,KAAK,CAACQ,CAAD,CAApB;AACAP,UAAAA,GAAG,CAAClB,gBAAgB,CAACgB,IAAI,CAACS,CAAD,CAAL,CAAjB,CAAH,GAAiCR,KAAK,CAACQ,CAAD,CAAtC;AACH;;AACD,eAAOP,GAAP;AACH;AAjBmD,KAAxD;AAmBH;AACJ,CAtBD;;AAuBA,eAAe;AACXQ,EAAAA,eADW,6BACO;AACdnB,IAAAA,WAAW;;AACXA,IAAAA,WAAW,GAAG,uBAAY,CAAG,CAA7B;AACH;AAJU,CAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\nconst transToCamelCase = str => {\n    const re = /-(\\w)/g;\n    return str.replace(re, function ($0, $1) {\n        return $1.toUpperCase();\n    });\n};\nlet setPolyfill = function () {\n    if (Object.getOwnPropertyNames(HTMLElement.prototype).indexOf('dataset') === -1) {\n        Object.defineProperty(HTMLElement.prototype, 'dataset', {\n            get: function () {\n                const attributes = this.attributes;\n                const name = [];\n                const value = [];\n                let obj = {};\n                for (let i = 0; i < attributes.length; i++) {\n                    if (attributes[i].nodeName.slice(0, 5) == 'data-') {\n                        name.push(attributes[i].nodeName.slice(5));\n                        value.push(attributes[i].nodeValue);\n                    }\n                }\n                for (let j = 0; j < name.length; j++) {\n                    obj[name[j]] = value[j];\n                    obj[transToCamelCase(name[j])] = value[j];\n                }\n                return obj;\n            },\n        });\n    }\n};\nexport default {\n    dataSetPolyfill() {\n        setPolyfill();\n        setPolyfill = function () { };\n    },\n};\n"],"file":"richEditorPolyfill.js"}