{"version":3,"sources":["system-setting/index.jsx"],"names":["React","message","Popconfirm","Card","ALinkAuth","isNotEmpty","CreateSystemSetForm","apiConfig","defaultHeader","getTabPaneData","parseThemes","request","SystemTenants","SystemOrganization","StandardTable","SearchForm","AuthButton","SystemLogin","SystemSetting","props","columns","title","width","dataIndex","align","render","_","record","handleSetOrg","handleSetTenant","handleEdit","disabled","handleDelete","className","sysSkin","style","backgroundColor","margin","height","sysLogo","sysLogin","sysAlone","sysGlobal","fetch","params","setState","loading","pagination","state","data","current","pageSize","keyword","searchInitValue","queryParams","pageIndex","url","rui","setting","list","headers","then","res","success","pageNum","size","content","map","item","total","systemSet","selectedMenuKey","updateTabPane","removeTabPane","paneKey","addPane","key","isWebDefault","closable","isMenu","refKey","isExternal","handleSelectRows","selectedRows","handleStandardTableChange","handleSearch","searchValues","handleAdd","method","settingId","handleDeleteAll","length","info","settingIds","s","join","deleteAll","nextProps","reloadState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport message from 'antd/es/message';\nimport Popconfirm from 'antd/es/popconfirm';\nimport Card from 'antd/es/card';\nimport ALinkAuth from '../auth-a-link';\nimport { isNotEmpty } from '../_util/utils';\nimport CreateSystemSetForm from './CreateSystemSetForm';\nimport { apiConfig, defaultHeader } from './setting';\nimport { getTabPaneData, parseThemes, request } from '../utils';\nimport SystemTenants from './SystemTenants';\nimport SystemOrganization from './SystemOrganization';\nimport StandardTable from '../ext-table';\nimport SearchForm from './SearchForm';\nimport AuthButton from '../auth-button';\nimport SystemLogin from './SystemLogin';\nclass SystemSetting extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                title: '操作',\n                width: 250,\n                dataIndex: 'process',\n                align: 'center',\n                render: (_, record) => {\n                    return [\n                        <ALinkAuth key=\"org\" isNeedDivider=\"true\" \n                        // authCode=\"6EA4148EF2A64024A01EDD2ED10B7202\"\n                        onClick={() => this.handleSetOrg(record)}>\n            组织机构\n          </ALinkAuth>,\n                        <ALinkAuth key=\"tenant\" isNeedDivider=\"true\" \n                        // authCode=\"7EA4148EF2A64024A01EDD2ED10B7123\"\n                        onClick={() => this.handleSetTenant(record)}>\n            租户\n          </ALinkAuth>,\n                        <ALinkAuth key=\"edit\" isNeedDivider=\"true\" \n                        // authCode=\"F64E917D88374312B8D696534B2AFF31\"\n                        onClick={() => this.handleEdit(record)}>\n            编辑\n          </ALinkAuth>,\n                        !record.disabled && (<Popconfirm className=\"seid-link-line\" key=\"delete\" title=\"您确定要删除吗?\" onConfirm={() => this.handleDelete(record)} okText=\"是\" cancelText=\"否\">\n              <ALinkAuth>\n                删除\n              </ALinkAuth>\n            </Popconfirm>),\n                    ];\n                },\n            },\n            {\n                title: '系统名称',\n                dataIndex: 'sysName',\n            },\n            {\n                title: '版本号',\n                dataIndex: 'sysVersion',\n            },\n            {\n                title: '首页地址',\n                dataIndex: 'sysHome',\n                width: 300,\n            },\n            {\n                title: '应用基地址',\n                dataIndex: 'appBasic',\n            },\n            {\n                title: '主题风格',\n                align: 'center',\n                dataIndex: 'sysSkin',\n                className: 'sysSkinCls',\n                render: sysSkin => {\n                    let style = {};\n                    if (isNotEmpty(sysSkin)) {\n                        style = isNotEmpty(parseThemes(sysSkin)['@head-back_color'])\n                            ? { backgroundColor: parseThemes(sysSkin)['@head-back_color'] }\n                            : {};\n                    }\n                    return (isNotEmpty(sysSkin) && (<div style={Object.assign(Object.assign({}, style), { margin: 'auto', width: '48px', height: '48px' })}/>));\n                },\n            },\n            {\n                align: 'center',\n                title: 'logo图标',\n                dataIndex: 'sysLogo',\n                className: 'sysLogoCls',\n                render: sysLogo => isNotEmpty(sysLogo) && <img alt=\"\" src={sysLogo}/>,\n            },\n            {\n                align: 'center',\n                title: '登录背景',\n                dataIndex: 'sysLogin',\n                className: 'sysLoginCls',\n                render: sysLogin => <SystemLogin src={sysLogin}/>,\n            },\n            {\n                align: 'center',\n                title: '单处登录',\n                dataIndex: 'sysAlone',\n                className: 'sysAloneCls',\n                render: sysAlone => (sysAlone ? <span>是</span> : <span>否</span>),\n            },\n            {\n                align: 'center',\n                title: '全局设置',\n                dataIndex: 'sysGlobal',\n                className: 'sysGlobalCls',\n                render: sysGlobal => (sysGlobal ? <span>是</span> : <span>否</span>),\n            },\n        ];\n        this.fetch = (params) => {\n            this.setState({ loading: true });\n            const { data: { pagination }, } = this.state;\n            let { current, pageSize } = pagination || { current: 0, pageSize: 15 };\n            let { keyword } = this.state.searchInitValue;\n            if (params) {\n                if (params.pagination) {\n                    current = params.pagination.current || 0;\n                    pageSize = params.pagination.pageSize || pageSize;\n                }\n                if (!params.keyword) {\n                    keyword = '';\n                }\n                else {\n                    keyword = params.keyword || '';\n                }\n            }\n            const queryParams = {\n                pageIndex: current,\n                pageSize,\n                keyword,\n            };\n            request({\n                url: apiConfig.rui.setting.list,\n                params: queryParams,\n                headers: Object.assign({}, defaultHeader),\n            })\n                .then((res) => {\n                if (res.success) {\n                    const { data = {} } = res;\n                    const { list = [], pageNum, pageSize: size } = data;\n                    const content = list.map((item) => (Object.assign(Object.assign({}, item), { disabled: !!item.sysGlobal })));\n                    this.setState({\n                        loading: false,\n                        data: {\n                            list: content,\n                            pagination: {\n                                current: pageNum,\n                                pageSize: size,\n                                total: data.total,\n                            },\n                        },\n                        searchInitValue: {\n                            keyword: queryParams.keyword,\n                        },\n                    });\n                }\n                else {\n                    this.setState({ loading: false });\n                }\n            })\n                .catch(() => {\n                this.setState({ loading: false });\n            });\n        };\n        this.handleSetOrg = (systemSet) => {\n            const { selectedMenuKey, updateTabPane, removeTabPane } = this.props;\n            const paneKey = 'ser-systemSetorgs-pane';\n            const addPane = getTabPaneData({\n                key: paneKey,\n                title: '设置系统设置的组织机构',\n                content: (<SystemOrganization removeTabPane={removeTabPane} systemSet={systemSet} paneKey={paneKey}/>),\n                isWebDefault: false,\n                closable: true,\n                isMenu: false,\n                refKey: selectedMenuKey,\n                isExternal: false,\n            });\n            if (updateTabPane) {\n                updateTabPane(addPane);\n            }\n        };\n        this.handleSetTenant = (systemSet) => {\n            const { selectedMenuKey, updateTabPane, removeTabPane } = this.props;\n            const paneKey = 'ser-systemSettenants-pane';\n            const addPane = getTabPaneData({\n                key: paneKey,\n                title: '设置系统设置的租户',\n                content: (<SystemTenants removeTabPane={removeTabPane} systemSet={systemSet} paneKey={paneKey}/>),\n                isWebDefault: false,\n                closable: true,\n                isMenu: false,\n                refKey: selectedMenuKey,\n                isExternal: false,\n            });\n            if (updateTabPane) {\n                updateTabPane(addPane);\n            }\n        };\n        this.handleSelectRows = (selectedRows) => {\n            this.setState({\n                selectedRows,\n            });\n        };\n        this.handleStandardTableChange = ({ current, pageSize }) => {\n            const params = {\n                pagination: {\n                    pageIndex: (current || 0) - 1,\n                    pageSize,\n                },\n            };\n            this.fetch(params);\n        };\n        this.handleSearch = (searchValues) => {\n            let params;\n            if (searchValues) {\n                params = {\n                    pagination: {\n                        pageIndex: 0,\n                    },\n                    keyword: searchValues.keyword,\n                };\n            }\n            else {\n                params = {\n                    pagination: {\n                        pageIndex: 0,\n                    },\n                    keyword: '',\n                };\n            }\n            this.fetch(params);\n        };\n        this.handleEdit = (systemSet) => {\n            const { selectedMenuKey, updateTabPane, removeTabPane } = this.props;\n            const paneKey = 'edit-systemSet-pane';\n            const addPane = getTabPaneData({\n                key: paneKey,\n                title: '编辑系统设置',\n                content: (<CreateSystemSetForm removeTabPane={removeTabPane} editSystemSet={systemSet} paneKey={paneKey}/>),\n                isWebDefault: false,\n                closable: true,\n                isMenu: false,\n                refKey: selectedMenuKey,\n                isExternal: false,\n            });\n            if (updateTabPane) {\n                updateTabPane(addPane);\n            }\n        };\n        this.handleAdd = () => {\n            const { selectedMenuKey, updateTabPane, removeTabPane } = this.props;\n            const paneKey = 'add-systemSet-pane';\n            const addPane = getTabPaneData({\n                key: paneKey,\n                title: '新增系统设置',\n                content: <CreateSystemSetForm removeTabPane={removeTabPane} paneKey={paneKey}/>,\n                isWebDefault: false,\n                closable: true,\n                isMenu: false,\n                refKey: selectedMenuKey,\n                isExternal: false,\n            });\n            if (updateTabPane) {\n                updateTabPane(addPane);\n            }\n        };\n        this.handleDelete = (systemSet) => {\n            this.setState({ loading: true });\n            request({\n                method: 'delete',\n                url: apiConfig.rui.setting.delete,\n                params: {\n                    settingId: systemSet.settingId,\n                },\n            }).then(() => {\n                const params = {\n                    pagination: {\n                        pageIndex: 0,\n                    },\n                };\n                this.fetch(params);\n            });\n        };\n        this.handleDeleteAll = () => {\n            const { selectedRows } = this.state;\n            if (selectedRows.length === 0) {\n                message.info('请选择要删除的系统设置');\n                return;\n            }\n            const settingIds = selectedRows.map(s => s.settingId).join(',');\n            this.setState({ loading: true });\n            request({\n                method: 'delete',\n                url: apiConfig.rui.setting.deleteAll,\n                params: {\n                    settingIds,\n                },\n            })\n                .then(() => {\n                this.setState({\n                    selectedRows: [],\n                }, () => {\n                    const params = {\n                        pagination: {\n                            pageIndex: 0,\n                        },\n                    };\n                    this.fetch(params);\n                });\n            })\n                .catch(() => {\n                this.setState({ loading: false });\n            });\n        };\n        this.state = {\n            loading: false,\n            selectedRows: [],\n            data: {\n                list: [],\n                pagination: {\n                    current: 0,\n                    pageSize: 15,\n                    total: 0,\n                },\n            },\n            searchInitValue: {\n                keyword: '',\n            },\n        };\n    }\n    componentDidMount() {\n        this.fetch({});\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.reloadState && nextProps.reloadState !== this.props.reloadState) {\n            const params = {\n                pagination: {\n                    pageIndex: 0,\n                },\n            };\n            this.fetch(params);\n        }\n    }\n    render() {\n        const { selectedRows, loading, data, searchInitValue } = this.state;\n        return (<Card bordered={false}>\n        <div className=\"tableSearchForm\">\n          <SearchForm handleSearch={this.handleSearch} searchInitValue={searchInitValue}/>\n        </div>\n        <div className=\"tableAction\">\n          <AuthButton icon=\"plus\" type=\"primary\" dataaction=\"create\" onClick={() => this.handleAdd()}>\n            新增\n          </AuthButton>\n          <Popconfirm title=\"您确定要删除选中的系统设置吗?\" onConfirm={() => this.handleDeleteAll()} okText=\"是\" cancelText=\"否\">\n            <AuthButton icon=\"delete\" type=\"primary\" dataaction=\"create\" loading={loading}>\n              批量删除\n            </AuthButton>\n          </Popconfirm>\n        </div>\n        <div className=\"SystemSetList\">\n          <StandardTable \n        // autoHeight={false}\n        selectedRows={selectedRows} rowSelection={false} loading={loading} rowKey=\"settingId\" data={data} columns={this.columns} \n        // onSelectRow={this.handleSelectRows}\n        onChange={this.handleStandardTableChange}/>\n        </div>\n      </Card>);\n    }\n}\nexport default SystemSetting;\n"],"file":"index.js"}