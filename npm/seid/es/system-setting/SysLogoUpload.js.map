{"version":3,"sources":["system-setting/SysLogoUpload.jsx"],"names":["React","Upload","message","isNotEmpty","substring","v","substr","SysLogoUpload","props","beforeUpload","file","isLogin","isSyslogin","isLt2M","size","error","getBase64","handleDealResult","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","e","imageUrl","setState","value","triggerChange","changedValue","onChange","state","nextState","uploadButton","altValue","customerClass","nextProps","prevState","newState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Upload from 'antd/es/upload';\nimport message from 'antd/es/message';\nimport { isNotEmpty } from '../_util/utils';\nconst substring = (v) => {\n    if (v) {\n        return v.substr(0, 80);\n    }\n    return v;\n};\nclass SysLogoUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.beforeUpload = (file) => {\n            const isLogin = this.props.isSyslogin;\n            const isLt2M = isLogin ? file.size / 1024 / 1024 < 2 : file.size / 1024 < 10;\n            if (!isLt2M) {\n                message.error(`上传图片不能大于${isLogin ? ' 2MB.' : ' 10KB.'}`);\n            }\n            else {\n                this.getBase64(file, this.handleDealResult);\n            }\n            return false;\n        };\n        this.getBase64 = (img, callback) => {\n            try {\n                const reader = new FileReader();\n                reader.addEventListener('load', () => callback(`${reader.result}`));\n                reader.readAsDataURL(img);\n            }\n            catch (e) {\n                message.error('上传图片错误，不能转换为Base64！');\n            }\n        };\n        this.handleDealResult = (imageUrl) => {\n            if (imageUrl) {\n                if (!('value' in this.props)) {\n                    this.setState({ value: imageUrl });\n                }\n                this.triggerChange(imageUrl);\n            }\n        };\n        this.triggerChange = (changedValue) => {\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(changedValue);\n            }\n        };\n        this.state = {\n            value: '',\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if ('value' in nextProps && substring(prevState.value) !== substring(nextProps.value)) {\n            const newState = {\n                value: nextProps.value || '',\n            };\n            return newState;\n        }\n        return null;\n    }\n    shouldComponentUpdate(nextState) {\n        return substring(this.state.value) !== substring(nextState.value);\n    }\n    render() {\n        const uploadButton = (<div>\n        <div className=\"ant-upload-text\">上传</div>\n      </div>);\n        const { value } = this.state;\n        const { altValue, isSyslogin = false } = this.props;\n        let customerClass = 'avatar-uploader';\n        if (isSyslogin) {\n            customerClass = 'sysLogin';\n        }\n        return (<Upload accept=\"image/*\" name=\"avatar\" listType=\"picture-card\" className={customerClass} showUploadList={false} beforeUpload={this.beforeUpload}>\n        {isNotEmpty(value) ? <img src={value || ''} alt={altValue}/> : uploadButton}\n      </Upload>);\n    }\n}\nexport default SysLogoUpload;\n"],"file":"SysLogoUpload.js"}