{"version":3,"sources":["system-setting/CreateSystemSetForm.jsx"],"names":["React","Form","Spin","Card","Row","Col","Input","Checkbox","Button","message","get","isNotEmpty","apiConfig","appConfig","defaultHeader","SysSkinCheck","SysLogoUpload","request","FormItem","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","CreateSystemSetForm","props","init","editSystemSet","setState","loading","form","url","rui","setting","findById","params","settingId","then","res","success","data","obj","sysSkin","JSON","parse","loginCenter","formValueInit","setFieldsValue","sysName","sysVersion","sysHome","sysLogin","sysAlone","sysLogo","sysGlobal","handleSubmit","e","preventDefault","validateFields","err","values","stringify","addByJson","editByJson","method","headers","goBack","error","handelCancel","isRefreshParent","removeTabPane","paneKey","state","nextProps","height","getFieldDecorator","rules","required","max","pattern","valuePropName","initialValue","Component","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'antd/es/form';\nimport Spin from 'antd/es/spin';\nimport Card from 'antd/es/card';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport Input from 'antd/es/input';\nimport Checkbox from 'antd/es/checkbox';\nimport Button from 'antd/es/button';\nimport message from 'antd/es/message';\nimport get from 'lodash/get';\nimport { isNotEmpty } from '../_util/utils';\nimport { apiConfig, appConfig, defaultHeader } from './setting';\nimport SysSkinCheck from './SysSkinCheck';\nimport SysLogoUpload from './SysLogoUpload';\nimport { request } from '../utils';\nconst FormItem = Form.Item;\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 18 },\n    },\n};\nclass CreateSystemSetForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.init = (editSystemSet) => {\n            this.setState({ loading: true });\n            const { form } = this.props;\n            request({\n                url: apiConfig.rui.setting.findById,\n                params: {\n                    settingId: editSystemSet.settingId,\n                },\n            })\n                .then((res) => {\n                if (res.success) {\n                    const { data = {} } = res;\n                    const obj = isNotEmpty(data.sysSkin) ? JSON.parse(data.sysSkin) : {};\n                    Object.assign(data, {\n                        loginCenter: isNotEmpty(obj['@center']) ? obj['@center'] : appConfig.loginCenter,\n                    });\n                    this.formValueInit = Object.assign({}, data);\n                    this.setState({\n                        loading: false,\n                    }, () => {\n                        form.setFieldsValue({\n                            sysName: data.sysName,\n                            sysSkin: data.sysSkin,\n                            sysVersion: data.sysVersion,\n                            // appBasic: data.appBasic,\n                            sysHome: data.sysHome,\n                            loginCenter: data.loginCenter,\n                            sysLogin: data.sysLogin,\n                            sysAlone: data.sysAlone,\n                            sysLogo: data.sysLogo,\n                            sysGlobal: data.sysGlobal,\n                        });\n                    });\n                }\n            })\n                .catch(() => {\n                this.setState({ loading: false });\n            });\n        };\n        this.handleSubmit = (e) => {\n            e.preventDefault();\n            const { form } = this.props;\n            form.validateFields((err, values) => {\n                if (!err) {\n                    let data;\n                    let url;\n                    let obj = {};\n                    if (isNotEmpty(values.sysSkin)) {\n                        obj = JSON.parse(values.sysSkin);\n                    }\n                    Object.assign(obj, { '@center': values.loginCenter });\n                    values.sysSkin = JSON.stringify(obj);\n                    if (!this.props.editSystemSet) {\n                        url = apiConfig.rui.setting.addByJson;\n                        data = Object.assign({}, values);\n                    }\n                    else {\n                        url = apiConfig.rui.setting.editByJson;\n                        data = Object.assign({ settingId: this.formValueInit.settingId }, values);\n                    }\n                    this.setState({ loading: true });\n                    request({\n                        method: 'post',\n                        url,\n                        data,\n                        headers: Object.assign({}, defaultHeader),\n                    })\n                        .then((res) => {\n                        if (res.success) {\n                            message.success('保存成功');\n                            this.setState({ loading: false }, () => {\n                                this.goBack(true);\n                            });\n                        }\n                        else {\n                            message.error(`保存失败!${res.message}`);\n                            this.setState({ loading: false });\n                        }\n                    })\n                        .catch(() => {\n                        this.setState({ loading: false });\n                    });\n                }\n            });\n        };\n        this.handelCancel = () => {\n            this.goBack(false);\n        };\n        this.goBack = (isRefreshParent = false) => {\n            const { removeTabPane, paneKey } = this.props;\n            if (removeTabPane) {\n                removeTabPane(paneKey, isRefreshParent);\n            }\n        };\n        this.state = {\n            loading: false,\n        };\n    }\n    componentWillMount() {\n        const { editSystemSet } = this.props;\n        if (editSystemSet) {\n            this.init(editSystemSet);\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        const { editSystemSet } = this.props;\n        if (nextProps.editSystemSet &&\n            nextProps.editSystemSet.settingId !== get(editSystemSet, 'settingId')) {\n            this.init(nextProps.editSystemSet);\n        }\n    }\n    render() {\n        const { form } = this.props;\n        const { loading } = this.state;\n        return (<Spin spinning={loading}>\n        <Card style={{ height: '100vh' }} bordered={false}>\n          <Form onSubmit={this.handleSubmit}>\n            <Row gutter={24}>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"系统名称\">\n                  {form.getFieldDecorator('sysName', {\n            rules: [\n                { required: true, message: '请输入系统名称' },\n                { max: 6, message: '最多输入6个字' },\n            ],\n        })(<Input placeholder=\"请输入\"/>)}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"主题风格\">\n                  {form.getFieldDecorator('sysSkin', {\n            rules: [{ pattern: /^[^\\s]*$/, message: '请不要输入空格' }],\n        })(<SysSkinCheck />)}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"版本号\">\n                  {form.getFieldDecorator('sysVersion', {\n            rules: [{ required: true, message: '请输入版本号' }],\n        })(<Input placeholder=\"请输入\"/>)}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"应用基地址\">\n                  {form.getFieldDecorator('appBasic', {\n            rules: [{ pattern: /^[^\\s]*$/, message: '请不要输入空格' }],\n        })(<Input placeholder=\"请输入\"/>)}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"首页地址\">\n                  {form.getFieldDecorator('sysHome', {\n            rules: [\n                // {required: true, message: '请输入首页地址'},\n                { pattern: /^[^\\s]*$/, message: '请不要输入空格' },\n            ],\n        })(<Input placeholder=\"请输入\"/>)}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"是否登录框居中\">\n                  {form.getFieldDecorator('loginCenter', {\n            valuePropName: 'checked',\n            initialValue: false,\n        })(<Checkbox />)}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"登录背景\">\n                  {form.getFieldDecorator('sysLogin', {})(<SysLogoUpload altValue=\"登录背景\" isSyslogin/>)}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"是否限制单处登录\">\n                  {form.getFieldDecorator('sysAlone', {\n            valuePropName: 'checked',\n            initialValue: false,\n        })(<Checkbox />)}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"logo图标\">\n                  {form.getFieldDecorator('sysLogo', {})(<SysLogoUpload altValue=\"logo图标\" isSyslogin={false}/>)}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem {...formItemLayout} label=\"是否默认全局设置\">\n                  {form.getFieldDecorator('sysGlobal', {\n            valuePropName: 'checked',\n            initialValue: false,\n        })(<Checkbox />)}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={24} className=\"operationArea\">\n                <Button onClick={this.handelCancel}>取消</Button>\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  保存\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </Spin>);\n    }\n}\nconst create = Form.create;\nexport default create()(CreateSystemSetForm);\n"],"file":"CreateSystemSetForm.js"}