{"version":3,"sources":["cron-builder/component/InputNumber.jsx"],"names":["React","Input","isUndefined","isNotNone","v","undefined","InputNumber","props","getValue","value","min","max","test","parseInt","handleChange","target","setState","handleBlur","notify","handleEnter","onChange","state","defaultValue","nextProps","toString","placeholder","style","disabled","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from 'antd/es/input';\nimport isUndefined from 'lodash/isUndefined';\nconst isNotNone = (v) => v !== null && v !== undefined;\nclass InputNumber extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getValue = (value, min, max) => {\n            if (/^\\d+$/.test(value)) {\n                let v = parseInt(value, 0);\n                if (v < min)\n                    v = min;\n                if (v > max)\n                    v = max;\n                return v;\n            }\n            return min;\n        };\n        this.handleChange = ({ target: { value } }) => {\n            this.setState({ value });\n        };\n        this.handleBlur = () => {\n            this.notify();\n        };\n        this.handleEnter = () => {\n            this.notify();\n        };\n        this.notify = () => {\n            const { onChange, min, max } = this.props;\n            const { value } = this.state;\n            if (onChange) {\n                onChange(this.getValue(value, min, max));\n            }\n        };\n        const { value, defaultValue } = props;\n        this.state = {\n            value: isUndefined(value) ? defaultValue : value,\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        const { value, min, max } = nextProps;\n        const v = this.getValue(value, min, max);\n        this.setState({ value: v });\n        if (isNotNone(v) && isNotNone(value) && v.toString() !== value.toString())\n            this.notify();\n    }\n    render() {\n        const { placeholder, style, disabled } = this.props;\n        const { value } = this.state;\n        return (<Input disabled={disabled} style={Object.assign({ width: '75px' }, style)} placeholder={placeholder} onChange={this.handleChange} onPressEnter={this.handleEnter} onBlur={this.handleBlur} value={value}/>);\n    }\n}\nexport default InputNumber;\n"],"file":"InputNumber.js"}