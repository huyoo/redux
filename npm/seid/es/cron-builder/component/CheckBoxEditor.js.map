{"version":3,"sources":["cron-builder/component/CheckBoxEditor.jsx"],"names":["React","Checkbox","Row","Col","CheckBoxEditor","onChange","min","max","value","disabled","checked","checkBoxs","minValue","maxValue","items","i","push","handleChange","values","length","sort","a","b","join","split","map","parseInt","filter","v","s"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAiD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,sBAApCC,GAAoC;AAAA,MAApCA,GAAoC,yBAA9B,CAA8B;AAAA,MAA3BC,GAA2B,QAA3BA,GAA2B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpE,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,QAAX,EAAwB;AACtC,QAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAGH,QAAb,EAAuBG,CAAC,IAAIF,QAA5B,EAAsCE,CAAC,IAAI,CAA3C,EAA8C;AAC1CD,MAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,GAAG,EAAED;AAAnB,SACb,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA;AAAjB,SAAqBA,CAArB,CADa,CAAX;AAGH;;AACD,WAAOD,KAAP;AACH,GARD;;AASA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC7B,QAAIA,MAAM,CAACC,MAAP,KAAkB,CAAlB,IAAuBd,QAA3B,EACIA,QAAQ,CAAC,GAAD,CAAR,CADJ,KAEK,IAAIA,QAAJ,EACDA,QAAQ,CAACa,MAAM,CAACE,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,GAAGC,CAAd;AAAA,KAAZ,EAA6BC,IAA7B,CAAkC,GAAlC,CAAD,CAAR;AACP,GALD;;AAMA,MAAIf,KAAK,KAAK,GAAd,EAAmB,CACf;AACH,GAFD,MAGK,IAAIA,KAAJ,EAAW;AACZE,IAAAA,OAAO,GAAGF,KAAK,CACVgB,KADK,CACC,GADD,EAELC,GAFK,CAED,UAACV,CAAD;AAAA,aAAOW,QAAQ,CAACX,CAAD,EAAI,CAAJ,CAAf;AAAA,KAFC,EAGLY,MAHK,CAGE,UAACC,CAAD;AAAA,aAAOA,CAAC,IAAItB,GAAL,IAAYsB,CAAC,IAAIrB,GAAxB;AAAA,KAHF,EAILa,IAJK,CAIA,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,GAAGC,CAAd;AAAA,KAJA,CAAV;AAKA,QAAMO,CAAC,GAAGnB,OAAO,CAACa,IAAR,CAAa,GAAb,CAAV;;AACA,QAAIM,CAAC,KAAKrB,KAAN,IAAeH,QAAnB,EAA6B;AACzBA,MAAAA,QAAQ,CAACwB,CAAD,CAAR;AACH;AACJ;;AACD,SAAQ,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,QAAQ,EAAEpB,QAA1B;AAAoC,IAAA,QAAQ,EAAEQ,YAA9C;AAA4D,IAAA,KAAK,EAAEP;AAAnE,KACN,oBAAC,GAAD,QAAMC,SAAS,CAACL,GAAD,EAAMC,GAAN,CAAf,CADM,CAAR;AAGH,CAlCD;;AAmCA,eAAeH,cAAf","sourcesContent":["import React from 'react';\nimport Checkbox from 'antd/es/checkbox';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nconst CheckBoxEditor = ({ onChange, min = 0, max, value, disabled }) => {\n    let checked = [];\n    const checkBoxs = (minValue, maxValue) => {\n        const items = [];\n        for (let i = minValue; i <= maxValue; i += 1) {\n            items.push(<Col span={2} key={i}>\n          <Checkbox value={i}>{i}</Checkbox>\n        </Col>);\n        }\n        return items;\n    };\n    const handleChange = (values) => {\n        if (values.length === 0 && onChange)\n            onChange('*');\n        else if (onChange)\n            onChange(values.sort((a, b) => a - b).join(','));\n    };\n    if (value === 'C') {\n        // empty\n    }\n    else if (value) {\n        checked = value\n            .split(',')\n            .map((i) => parseInt(i, 0))\n            .filter((v) => v >= min && v <= max)\n            .sort((a, b) => a - b);\n        const s = checked.join(',');\n        if (s !== value && onChange) {\n            onChange(s);\n        }\n    }\n    return (<Checkbox.Group disabled={disabled} onChange={handleChange} value={checked}>\n      <Row>{checkBoxs(min, max)}</Row>\n    </Checkbox.Group>);\n};\nexport default CheckBoxEditor;\n"],"file":"CheckBoxEditor.js"}