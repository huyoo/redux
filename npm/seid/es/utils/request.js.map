{"version":3,"sources":["utils/request.jsx"],"names":["axios","constants","storage","codeMessage","isValidKey","key","obj","pending","CancelToken","removePending","config","f","flagUrl","url","indexOf","CANCEL_REQUEST_MESSAGE","splice","push","request","create","timeout","interceptors","use","method","headers","needToken","neverCancel","cancelToken","c","toLocaleLowerCase","process","env","NODE_ENV","cacheControl","pragma","token","sessionStorage","get","CONST_GLOBAL","TOKEN_KEY","error","Promise","reject","response","statusText","status","restData","data","success","resolve","message","msg","statusCode","Object","resData"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { constants, storage } from '.';\nexport const codeMessage = {\n    200: '服务器成功返回请求的数据。',\n    201: '新建或修改数据成功。',\n    202: '一个请求已经进入后台排队（异步任务）。',\n    204: '删除数据成功。',\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n    401: '用户没有权限（令牌、用户名、密码错误）。',\n    403: '用户得到授权，但是访问是被禁止的。',\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n    406: '请求的格式不可得。',\n    410: '请求的资源被永久删除，且不会再得到的。',\n    422: '当创建一个对象时，发生一个验证错误。',\n    500: '服务器发生错误，请检查服务器。',\n    502: '网关错误。',\n    503: '服务不可用，服务器暂时过载或维护。',\n    504: '网关超时。',\n};\nexport function isValidKey(key, obj) {\n    if (obj[key]) {\n        return obj[key];\n    }\n    return null;\n}\n/* 防止重复提交，利用axios的cancelToken */\nlet pending = []; // 声明一个数组用于存储每个ajax请求的取消函数和ajax标识\nconst CancelToken = axios.CancelToken;\nconst removePending = (config, f) => {\n    // 获取请求的url\n    const flagUrl = config.url;\n    // 判断该请求是否在请求队列中\n    if (pending.indexOf(flagUrl) !== -1) {\n        // 如果在请求中，并存在f,f即axios提供的取消函数\n        if (f) {\n            f(constants.CANCEL_REQUEST_MESSAGE); // 执行取消操作\n        }\n        else {\n            pending.splice(pending.indexOf(flagUrl), 1); // 把这条记录从数组中移除\n        }\n    }\n    else if (f) {\n        // 如果不存在在请求队列中，加入队列\n        pending.push(flagUrl);\n    }\n};\n/* 创建axios实例 */\nconst request = axios.create({\n    timeout: 5000,\n});\n/* request拦截器 */\nrequest.interceptors.request.use((config) => {\n    const { method = 'get', headers } = config;\n    const { needToken = true, neverCancel } = headers;\n    // neverCancel 配置项，允许多个请求\n    if (!neverCancel) {\n        // 生成cancelToken\n        config.cancelToken = new CancelToken((c) => {\n            removePending(config, c);\n        });\n    }\n    // cache control\n    if (method.toLocaleLowerCase() === 'get' && process.env.NODE_ENV === 'production') {\n        const cacheControl = 'cache-control';\n        const pragma = 'Pragma';\n        config.headers[cacheControl] = 'no-cache';\n        config.headers[pragma] = 'no-cache';\n    }\n    // tokens\n    const token = storage.sessionStorage.get(constants.CONST_GLOBAL.TOKEN_KEY);\n    if (token && needToken) {\n        config.headers[constants.CONST_GLOBAL.TOKEN_KEY] = token;\n    }\n    return config;\n}, (error) => {\n    Promise.reject(error);\n});\n/* response拦截器 */\nrequest.interceptors.response.use((response) => {\n    // 移除队列中的该请求，注意这时候没有传第二个参数f\n    removePending(response.config);\n    // 获取返回数据，并处理。按自己业务需求修改。\n    const { statusText, status, data: restData, headers, config } = response;\n    if (typeof restData === 'object') {\n        /** 依赖后台接口响应返回作了特殊判断 */\n        if (('status' in restData &&\n            restData.status &&\n            restData.status !== 200 &&\n            restData.status !== 'SUCCESS') ||\n            ('success' in restData && !restData.success)) {\n            return Promise.resolve({\n                success: false,\n                message: restData.message || restData.msg,\n                statusCode: restData.status || 600,\n                data: restData.data || restData || null,\n                status,\n                statusText,\n                headers,\n                config,\n            });\n        }\n    }\n    return Promise.resolve({\n        data: restData.data || restData || null,\n        success: true,\n        message: statusText,\n        statusCode: status,\n        status,\n        statusText,\n        headers,\n        config,\n    });\n}, (error) => {\n    // 异常处理\n    pending = [];\n    const { response, message } = error;\n    if (message === constants.CANCEL_REQUEST_MESSAGE) {\n        return Promise.reject({\n            message,\n            success: false,\n            data: null,\n        });\n    }\n    let msg;\n    let statusCode;\n    if (response && response instanceof Object) {\n        const { data: resData, statusText, status } = response;\n        statusCode = status;\n        msg = resData.message || statusText;\n    }\n    else {\n        statusCode = 600;\n        msg = message || 'Network Error';\n    }\n    return Promise.reject({\n        success: false,\n        statusCode,\n        message: msg,\n    });\n});\nexport default request;\n"],"file":"request.js"}