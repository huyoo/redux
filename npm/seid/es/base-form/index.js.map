{"version":3,"sources":["base-form/index.jsx"],"names":["React","PropTypes","Input","Form","Button","DatePicker","Row","Col","InputNumber","Checkbox","Radio","isPlainObject","isEqual","isNil","CronInput","ScopeDatePicker","FormItem","Item","TextArea","RangePicker","RadioGroup","Group","BaseForm","arguments","handleSubmit","form","props","submitObj","Promise","resolve","validateFields","err","values","onSubmit","reset","resetFields","getInitValueByFields","field","value","initData","fields","split","tempData","i","length","setFormValues","formList","setFieldsValue","forEach","item","initValue","getFormEle","DatePickerTemp","InputTemp","InputNumberTemp","CheckBox","config","width","initFormList","getFieldDecorator","strategy","columns","showOptBtn","formItemLayout","labelCol","span","wrapperCol","formItemList","spanNum","baseFormProps","style","margin","label","hidden","type","rules","comp","temp","formProps","component","decoratorConfig","valuePropName","push","display","hasOptBtn","onRef","prevProps","textAlign","marginBottom","Component","propTypes","array","number","bool","object","func","defaultProps","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'antd/es/input';\nimport Form from 'antd/es/form/Form';\nimport Button from 'antd/es/button';\nimport DatePicker from 'antd/es/date-picker';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport InputNumber from 'antd/es/input-number';\nimport Checkbox from 'antd/es/checkbox';\nimport Radio from 'antd/es/radio';\nimport { isPlainObject, isEqual, isNil } from 'lodash';\nimport CronInput from '../cron-input';\nimport ScopeDatePicker from '../scope-date-picker';\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\nconst RadioGroup = Radio.Group;\nclass BaseForm extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleSubmit = () => {\n            const { form } = this.props;\n            let submitObj = null;\n            return new Promise(resolve => {\n                form.validateFields((err, values) => {\n                    if (!err) {\n                        const { onSubmit } = this.props;\n                        submitObj = Object.assign({}, values);\n                        if (onSubmit) {\n                            onSubmit(submitObj);\n                        }\n                    }\n                    resolve({ err, values: submitObj });\n                });\n            });\n        };\n        this.reset = () => {\n            const { form } = this.props;\n            form.resetFields();\n        };\n        /** 根据字段获取初始值 */\n        this.getInitValueByFields = (field, value) => {\n            const { initData } = this.props;\n            if (!initData || !isPlainObject(initData)) {\n                return value || null;\n            }\n            const fields = field.split('.');\n            let tempData = initData;\n            for (let i = 0; i < fields.length; i += 1) {\n                tempData = tempData[fields[i]];\n                if (!tempData) {\n                    break;\n                }\n            }\n            if (isNil(tempData)) {\n                return value || null;\n            }\n            return tempData;\n        };\n        this.setFormValues = () => {\n            const initData = {};\n            const { formList, form } = this.props;\n            const { setFieldsValue } = form;\n            if (formList && formList.length > 0) {\n                formList.forEach((item) => {\n                    const { field, initValue } = item;\n                    initData[field] = this.getInitValueByFields(field, initValue);\n                });\n            }\n            setFieldsValue(initData);\n        };\n        this.getFormEle = () => {\n            const DatePickerTemp = DatePicker;\n            const InputTemp = Input;\n            const InputNumberTemp = InputNumber;\n            const CheckBox = Checkbox;\n            return {\n                TextArea: (config) => <TextArea rows={3} {...config}/>,\n                RadioGroup: (config) => <RadioGroup {...config}/>,\n                Checkbox: (config) => <CheckBox {...config}/>,\n                Input: (config) => <InputTemp {...config}/>,\n                InputNumber: (config) => <InputNumberTemp style={{ width: '100%' }} {...config}/>,\n                DatePicker: (config) => (<DatePickerTemp {...this.props} {...config} style={{ width: '100%' }}/>),\n                RangePicker: (config) => (<RangePicker {...this.props} {...config} style={{ width: '100%' }}/>),\n                ScopeDatePicker: (config) => <ScopeDatePicker {...this.props} {...config}/>,\n                CronInput: (config) => <CronInput {...this.props} {...config}/>,\n            };\n        };\n        this.initFormList = () => {\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            const strategy = this.getFormEle();\n            const { formList, columns = 3, showOptBtn, formItemLayout = {\n                labelCol: {\n                    span: 6,\n                },\n                wrapperCol: {\n                    span: 18,\n                },\n            }, } = this.props;\n            const formItemList = [];\n            const spanNum = 24 / columns;\n            const baseFormProps = Object.assign({ style: { margin: '0 auto' } }, formItemLayout);\n            if (formList && formList.length > 0) {\n                formList.forEach((item) => {\n                    const { label, field, hidden, type, rules = [], comp = null, config } = item;\n                    const temp = Object.assign({}, formItemLayout);\n                    if (!label) {\n                        temp.labelCol = {\n                            span: 0,\n                        };\n                        temp.wrapperCol = {\n                            span: 24,\n                        };\n                    }\n                    const formProps = Object.assign(Object.assign({ label }, baseFormProps), temp);\n                    let component = strategy.Input(config);\n                    if (strategy[type]) {\n                        component = strategy[type](config);\n                    }\n                    if (comp) {\n                        component = comp;\n                    }\n                    if (component) {\n                        const decoratorConfig = {\n                            rules,\n                        };\n                        if (type === 'Checkbox') {\n                            decoratorConfig.valuePropName = 'checked';\n                        }\n                        formItemList.push(<Col key={field} span={spanNum} style={{ display: hidden ? 'none' : 'block' }}>\n              <FormItem {...formProps}>\n                {getFieldDecorator(field, decoratorConfig)(component)}\n              </FormItem>\n            </Col>);\n                    }\n                });\n            }\n            if (formItemList.length % columns !== 0) {\n                this.hasOptBtn = true;\n                if (showOptBtn) {\n                    formItemList.push(<Col key=\"opt\" span={spanNum}>\n            <FormItem {...baseFormProps}>\n              <Button type=\"primary\" style={{ margin: '0 5px' }} onClick={this.handleSubmit}>\n                查询\n              </Button>\n            </FormItem>\n          </Col>);\n                }\n            }\n            return formItemList;\n        };\n    }\n    componentDidMount() {\n        const { onRef } = this.props;\n        if (onRef) {\n            onRef(this);\n        }\n        this.setFormValues();\n    }\n    componentDidUpdate(prevProps) {\n        const { initData } = this.props;\n        if (!isEqual(initData, prevProps.initData)) {\n            this.setFormValues();\n        }\n    }\n    render() {\n        const { showOptBtn } = this.props;\n        return (<Form>\n        <Row gutter={24}>{this.initFormList()}</Row>\n        {showOptBtn && !this.hasOptBtn ? (<FormItem style={{ textAlign: 'right', marginBottom: 0 }}>\n            <Button type=\"primary\" style={{ margin: '0 5px' }} onClick={this.handleSubmit}>\n              查询\n            </Button>\n          </FormItem>) : null}\n      </Form>);\n    }\n}\nBaseForm.propTypes = {\n    /** 表单元素配置数组 */\n    formList: PropTypes.array,\n    /** 每行显示的表单元素数量 */\n    columns: PropTypes.number,\n    /** 是否展示操作按钮 */\n    showOptBtn: PropTypes.bool,\n    /** 表单元素标签和内容布局 */\n    formItemLayout: PropTypes.object,\n    /** 收集表单元素的值的回调函数 */\n    onSubmit: PropTypes.func,\n    /** 初始化值 */\n    initData: PropTypes.object,\n};\nBaseForm.defaultProps = {\n    columns: 3,\n    formItemLayout: {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 18,\n        },\n    },\n    showOptBtn: false,\n    onSubmit: null,\n    formList: [],\n    initData: null,\n};\nexport default Form.create()(BaseForm);\n"],"file":"index.js"}